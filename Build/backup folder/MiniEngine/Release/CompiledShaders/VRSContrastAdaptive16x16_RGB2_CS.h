#if 0
;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;       Wave level operations
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: a45cb1718d9045079d318dd489f4d920
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer CB0
; {
;
;   struct CB0
;   {
;
;       uint2 TextureSize;                            ; Offset:    0
;       uint ShadingRateTileSize;                     ; Offset:    8
;       float SensitivityThreshold;                   ; Offset:   12
;       float EnvLuma;                                ; Offset:   16
;       float K;                                      ; Offset:   20
;       float WeberFechnerConstant;                   ; Offset:   24
;       bool UseWeberFechner;                         ; Offset:   28
;       bool UseMotionVectors;                        ; Offset:   32
;       bool AllowQuarterRate;                        ; Offset:   36
;       uint NativeWidth;                             ; Offset:   40
;       uint NativeHeight;                            ; Offset:   44
;       uint UpscaledWidth;                           ; Offset:   48
;       uint UpscaledHeight;                          ; Offset:   52
;       bool UseUpscaledMotionVectors;                ; Offset:   56
;   
;   } CB0;                                            ; Offset:    0 Size:    60
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; CB0                               cbuffer      NA          NA     CB0            cb0     1
; VRSShadingRateBuffer                  UAV     u32          2d      U0             u0     1
; PostEffectsImage                      UAV     f32          2d      U1             u1     1
; VelocityBuffer                        UAV     u32          2d      U2             u2     1
; UpscaledVelocityBuffer                UAV     f32          2d      U3             u3     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%"class.RWTexture2D<vector<float, 3> >" = type { <3 x float> }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%CB0 = type { <2 x i32>, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32 }

@"\01?waveVelocityMin@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSum@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSumX@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSumY@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?neighborhood@@3PAY0BA@$$CAMA.1dim" = addrspace(3) global [256 x float] undef, align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %7 = call i32 @dx.op.groupId.i32(i32 94, i32 1)  ; GroupId(component)
  %8 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96)  ; FlattenedThreadIdInGroup()
  %9 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %10 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %11 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %12 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %13 = call i32 @dx.op.waveGetLaneCount(i32 112)  ; WaveGetLaneCount()
  %14 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 undef, i32 %11, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %15 = extractvalue %dx.types.ResRet.f32 %14, 0
  %16 = extractvalue %dx.types.ResRet.f32 %14, 1
  %17 = extractvalue %dx.types.ResRet.f32 %14, 2
  %18 = add i32 %11, -1
  %19 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 undef, i32 %18, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %20 = extractvalue %dx.types.ResRet.f32 %19, 0
  %21 = extractvalue %dx.types.ResRet.f32 %19, 1
  %22 = extractvalue %dx.types.ResRet.f32 %19, 2
  %23 = add i32 %12, -1
  %24 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 undef, i32 %11, i32 %23, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %25 = extractvalue %dx.types.ResRet.f32 %24, 0
  %26 = extractvalue %dx.types.ResRet.f32 %24, 1
  %27 = extractvalue %dx.types.ResRet.f32 %24, 2
  %28 = fmul fast float %15, %15
  %29 = fmul fast float %16, %16
  %30 = fmul fast float %17, %17
  %31 = call float @dx.op.dot3.f32(i32 55, float %28, float %29, float %30, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %32 = fmul fast float %20, %20
  %33 = fmul fast float %21, %21
  %34 = fmul fast float %22, %22
  %35 = call float @dx.op.dot3.f32(i32 55, float %32, float %33, float %34, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %36 = fmul fast float %25, %25
  %37 = fmul fast float %26, %26
  %38 = fmul fast float %27, %27
  %39 = call float @dx.op.dot3.f32(i32 55, float %36, float %37, float %38, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %40 = call float @dx.op.waveActiveOp.f32(i32 119, float %31, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %41 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %42 = extractvalue %dx.types.CBufRet.i32 %41, 3
  %43 = icmp eq i32 %42, 0
  %44 = fsub fast float %31, %35
  %45 = call float @dx.op.unary.f32(i32 6, float %44)  ; FAbs(value)
  %46 = fsub fast float %31, %39
  %47 = call float @dx.op.unary.f32(i32 6, float %46)  ; FAbs(value)
  br i1 %43, label %107, label %48

; <label>:48                                      ; preds = %0
  %49 = mul i32 %9, 16
  %50 = add i32 %10, %49
  %51 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %50
  store float %31, float addrspace(3)* %51, align 4, !tbaa !17
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %52 = add nsw i32 %9, 1
  %53 = add nsw i32 %9, -1
  %54 = add nsw i32 %10, 1
  %55 = add nsw i32 %10, -1
  %56 = mul i32 %9, 16
  %57 = add i32 %55, %56
  %58 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %57
  %59 = load float, float addrspace(3)* %58, align 4, !tbaa !17
  %60 = mul i32 %52, 16
  %61 = add i32 %55, %60
  %62 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %61
  %63 = load float, float addrspace(3)* %62, align 4, !tbaa !17
  %64 = mul i32 %52, 16
  %65 = add i32 %10, %64
  %66 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %65
  %67 = load float, float addrspace(3)* %66, align 4, !tbaa !17
  %68 = mul i32 %52, 16
  %69 = add i32 %54, %68
  %70 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %69
  %71 = load float, float addrspace(3)* %70, align 4, !tbaa !17
  %72 = mul i32 %9, 16
  %73 = add i32 %54, %72
  %74 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %73
  %75 = load float, float addrspace(3)* %74, align 4, !tbaa !17
  %76 = mul i32 %53, 16
  %77 = add i32 %54, %76
  %78 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %77
  %79 = load float, float addrspace(3)* %78, align 4, !tbaa !17
  %80 = mul i32 %53, 16
  %81 = add i32 %55, %80
  %82 = getelementptr [256 x float], [256 x float] addrspace(3)* @"\01?neighborhood@@3PAY0BA@$$CAMA.1dim", i32 0, i32 %81
  %83 = load float, float addrspace(3)* %82, align 4, !tbaa !17
  %84 = call float @dx.op.binary.f32(i32 36, float 1.000000e+04, float %59)  ; FMin(a,b)
  %85 = call float @dx.op.binary.f32(i32 36, float %84, float %63)  ; FMin(a,b)
  %86 = call float @dx.op.binary.f32(i32 36, float %85, float %67)  ; FMin(a,b)
  %87 = call float @dx.op.binary.f32(i32 36, float %86, float %71)  ; FMin(a,b)
  %88 = call float @dx.op.binary.f32(i32 36, float %87, float %75)  ; FMin(a,b)
  %89 = call float @dx.op.binary.f32(i32 36, float %88, float %79)  ; FMin(a,b)
  %90 = call float @dx.op.binary.f32(i32 36, float %89, float %75)  ; FMin(a,b)
  %91 = call float @dx.op.binary.f32(i32 36, float %90, float %83)  ; FMin(a,b)
  %92 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %93 = extractvalue %dx.types.CBufRet.f32 %92, 2
  %94 = fmul fast float %91, 5.000000e+01
  %95 = fadd fast float %94, -2.500000e+00
  %96 = call float @dx.op.unary.f32(i32 7, float %95)  ; Saturate(value)
  %97 = fsub fast float 1.000000e+00, %96
  %98 = fmul fast float %97, %93
  %99 = call float @dx.op.binary.f32(i32 36, float %31, float %35)  ; FMin(a,b)
  %100 = fadd fast float %99, %98
  %101 = fdiv fast float %45, %100
  %102 = call float @dx.op.waveActiveOp.f32(i32 119, float %101, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %103 = call float @dx.op.binary.f32(i32 36, float %31, float %39)  ; FMin(a,b)
  %104 = fadd fast float %103, %98
  %105 = fdiv fast float %47, %104
  %106 = call float @dx.op.waveActiveOp.f32(i32 119, float %105, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %112

; <label>:107                                     ; preds = %0
  %108 = fmul fast float %45, 5.000000e-01
  %109 = call float @dx.op.waveActiveOp.f32(i32 119, float %108, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %110 = fmul fast float %47, 5.000000e-01
  %111 = call float @dx.op.waveActiveOp.f32(i32 119, float %110, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %112

; <label>:112                                     ; preds = %107, %48
  %113 = phi float [ %102, %48 ], [ %109, %107 ]
  %114 = phi float [ %106, %48 ], [ %111, %107 ]
  %115 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %116 = extractvalue %dx.types.CBufRet.i32 %115, 0
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %178, label %118

; <label>:118                                     ; preds = %112
  %119 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %147, label %122

; <label>:122                                     ; preds = %118
  %123 = extractvalue %dx.types.CBufRet.i32 %119, 0
  %124 = uitofp i32 %123 to float
  %125 = extractvalue %dx.types.CBufRet.i32 %115, 2
  %126 = uitofp i32 %125 to float
  %127 = fdiv fast float %124, %126
  %128 = extractvalue %dx.types.CBufRet.i32 %119, 1
  %129 = uitofp i32 %128 to float
  %130 = extractvalue %dx.types.CBufRet.i32 %115, 3
  %131 = uitofp i32 %130 to float
  %132 = fdiv fast float %129, %131
  %133 = uitofp i32 %11 to float
  %134 = fmul fast float %127, %133
  %135 = uitofp i32 %12 to float
  %136 = fmul fast float %132, %135
  %137 = fptoui float %134 to i32
  %138 = fptoui float %136 to i32
  %139 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 undef, i32 %137, i32 %138, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %140 = extractvalue %dx.types.ResRet.f32 %139, 0
  %141 = extractvalue %dx.types.ResRet.f32 %139, 1
  %142 = fmul fast float %140, %140
  %143 = fmul fast float %141, %141
  %144 = fadd fast float %142, %143
  %145 = call float @dx.op.unary.f32(i32 24, float %144)  ; Sqrt(value)
  %146 = call float @dx.op.waveActiveOp.f32(i32 119, float %145, i8 2, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %178

; <label>:147                                     ; preds = %118
  %148 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 undef, i32 %11, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %149 = extractvalue %dx.types.ResRet.i32 %148, 0
  %150 = shl i32 %149, 4
  %151 = and i32 %150, 8176
  %152 = shl i32 %149, 6
  %153 = and i32 %152, 32768
  %154 = or i32 %151, %153
  %155 = call float @dx.op.legacyF16ToF32(i32 131, i32 %154)  ; LegacyF16ToF32(value)
  %156 = fmul fast float %155, 3.276800e+04
  %157 = lshr i32 %149, 6
  %158 = and i32 %157, 8176
  %159 = lshr i32 %149, 4
  %160 = and i32 %159, 32768
  %161 = or i32 %158, %160
  %162 = call float @dx.op.legacyF16ToF32(i32 131, i32 %161)  ; LegacyF16ToF32(value)
  %163 = fmul fast float %162, 3.276800e+04
  %164 = lshr i32 %149, 18
  %165 = and i32 %164, 8188
  %166 = lshr i32 %149, 31
  %167 = shl nuw nsw i32 %166, 15
  %168 = or i32 %165, %167
  %169 = call float @dx.op.legacyF16ToF32(i32 131, i32 %168)  ; LegacyF16ToF32(value)
  %170 = fmul fast float %169, 1.280000e+02
  %171 = fmul fast float %156, %156
  %172 = fmul fast float %163, %163
  %173 = fadd fast float %172, %171
  %174 = fmul fast float %170, %170
  %175 = fadd fast float %173, %174
  %176 = call float @dx.op.unary.f32(i32 24, float %175)  ; Sqrt(value)
  %177 = call float @dx.op.waveActiveOp.f32(i32 119, float %176, i8 2, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %178

; <label>:178                                     ; preds = %147, %122, %112
  %179 = phi float [ %146, %122 ], [ %177, %147 ], [ 0.000000e+00, %112 ]
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %180 = call i1 @dx.op.waveIsFirstLane(i32 110)  ; WaveIsFirstLane()
  br i1 %180, label %181, label %187

; <label>:181                                     ; preds = %178
  %182 = udiv i32 %8, %13
  %183 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSum@@3PAMA", i32 0, i32 %182
  store float %40, float addrspace(3)* %183, align 4, !tbaa !17
  %184 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumX@@3PAMA", i32 0, i32 %182
  store float %113, float addrspace(3)* %184, align 4, !tbaa !17
  %185 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumY@@3PAMA", i32 0, i32 %182
  store float %114, float addrspace(3)* %185, align 4, !tbaa !17
  %186 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveVelocityMin@@3PAMA", i32 0, i32 %182
  store float %179, float addrspace(3)* %186, align 4, !tbaa !17
  br label %187

; <label>:187                                     ; preds = %181, %178
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %188 = icmp eq i32 %8, 0
  br i1 %188, label %189, label %283

; <label>:189                                     ; preds = %187
  %190 = sdiv i32 256, %13
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %192, label %217

; <label>:192                                     ; preds = %189
  br label %193

; <label>:193                                     ; preds = %193, %192
  %194 = phi float [ %201, %193 ], [ 0.000000e+00, %192 ]
  %195 = phi float [ %204, %193 ], [ 0.000000e+00, %192 ]
  %196 = phi float [ %207, %193 ], [ 0.000000e+00, %192 ]
  %197 = phi float [ %210, %193 ], [ 1.000000e+04, %192 ]
  %198 = phi i32 [ %211, %193 ], [ 0, %192 ]
  %199 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSum@@3PAMA", i32 0, i32 %198
  %200 = load float, float addrspace(3)* %199, align 4, !tbaa !17
  %201 = fadd fast float %200, %194
  %202 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumX@@3PAMA", i32 0, i32 %198
  %203 = load float, float addrspace(3)* %202, align 4, !tbaa !17
  %204 = fadd fast float %203, %195
  %205 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumY@@3PAMA", i32 0, i32 %198
  %206 = load float, float addrspace(3)* %205, align 4, !tbaa !17
  %207 = fadd fast float %206, %196
  %208 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveVelocityMin@@3PAMA", i32 0, i32 %198
  %209 = load float, float addrspace(3)* %208, align 4, !tbaa !17
  %210 = call float @dx.op.binary.f32(i32 36, float %197, float %209)  ; FMin(a,b)
  %211 = add nuw nsw i32 %198, 1
  %212 = icmp slt i32 %211, %190
  br i1 %212, label %193, label %213

; <label>:213                                     ; preds = %193
  %214 = fmul float %201, 3.906250e-03
  %215 = fmul float %204, 3.906250e-03
  %216 = fmul float %207, 3.906250e-03
  br label %217

; <label>:217                                     ; preds = %213, %189
  %218 = phi float [ 0.000000e+00, %189 ], [ %214, %213 ]
  %219 = phi float [ 0.000000e+00, %189 ], [ %215, %213 ]
  %220 = phi float [ 0.000000e+00, %189 ], [ %216, %213 ]
  %221 = phi float [ 1.000000e+04, %189 ], [ %210, %213 ]
  %222 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %223 = extractvalue %dx.types.CBufRet.f32 %222, 3
  %224 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %225 = extractvalue %dx.types.CBufRet.f32 %224, 0
  %226 = fadd fast float %225, %218
  %227 = fmul fast float %226, %223
  %228 = call float @dx.op.unary.f32(i32 24, float %219)  ; Sqrt(value)
  %229 = call float @dx.op.unary.f32(i32 24, float %220)  ; Sqrt(value)
  %230 = call float @dx.op.tertiary.f32(i32 46, float 0xBFAE809D40000000, float %221, float 1.000000e+00)  ; FMad(a,b,c)
  %231 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %232 = extractvalue %dx.types.CBufRet.i32 %231, 0
  %233 = icmp ne i32 %232, 0
  %234 = uitofp i1 %233 to float
  %235 = fmul fast float %234, %230
  %236 = icmp eq i32 %232, 0
  %237 = uitofp i1 %236 to float
  %238 = fadd fast float %237, %235
  %239 = extractvalue %dx.types.CBufRet.f32 %224, 1
  %240 = fsub fast float 0x3FC4D9E840000000, %239
  %241 = fmul fast float %240, 6.250000e-02
  %242 = call float @dx.op.tertiary.f32(i32 46, float %241, float %221, float %239)  ; FMad(a,b,c)
  %243 = fmul fast float %234, %242
  %244 = call float @dx.op.tertiary.f32(i32 46, float %239, float %237, float %243)  ; FMad(a,b,c)
  %245 = fmul fast float %238, %228
  %246 = fcmp fast oge float %245, %227
  %247 = fmul fast float %244, %228
  %248 = fcmp fast olt float %247, %227
  %249 = fmul fast float %238, %229
  %250 = fcmp fast oge float %249, %227
  %251 = fmul fast float %244, %229
  %252 = fcmp fast olt float %251, %227
  %253 = extractvalue %dx.types.CBufRet.i32 %231, 1
  %254 = icmp ne i32 %253, 0
  %255 = zext i1 %254 to i32
  %256 = shl nuw nsw i32 %255, 1
  %257 = icmp eq i32 %253, 0
  %258 = zext i1 %257 to i32
  %259 = or i32 %258, %256
  %260 = select i1 %248, i32 %259, i32 0
  %261 = or i1 %246, %248
  %262 = zext i1 %261 to i32
  %263 = xor i32 %262, 1
  %264 = add nuw nsw i32 %260, %263
  %265 = select i1 %252, i32 %259, i32 0
  %266 = or i1 %250, %252
  %267 = zext i1 %266 to i32
  %268 = xor i32 %267, 1
  %269 = add nuw nsw i32 %265, %268
  %270 = icmp eq i32 %269, 0
  %271 = icmp eq i32 %264, 2
  %272 = and i1 %270, %271
  br i1 %272, label %279, label %273

; <label>:273                                     ; preds = %217
  %274 = icmp eq i32 %269, 2
  %275 = icmp eq i32 %264, 0
  %276 = and i1 %274, %275
  %277 = select i1 %276, i32 1, i32 %269
  %278 = shl nuw nsw i32 %264, 2
  br label %279

; <label>:279                                     ; preds = %273, %217
  %280 = phi i32 [ 4, %217 ], [ %278, %273 ]
  %281 = phi i32 [ 0, %217 ], [ %277, %273 ]
  %282 = or i32 %281, %280
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %4, i32 %6, i32 %7, i32 undef, i32 %282, i32 %282, i32 %282, i32 %282, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %283

; <label>:283                                     ; preds = %279, %187
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.waveGetLaneCount(i32) #0

; Function Attrs: nounwind
declare float @dx.op.waveActiveOp.f32(i32, float, i8, i8) #1

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind
declare i1 @dx.op.waveIsFirstLane(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #3

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { noduplicate nounwind }
attributes #3 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!14}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{null, !5, !12, null}
!5 = !{!6, !8, !10, !11}
!6 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 5}
!8 = !{i32 1, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 2, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!11 = !{i32 3, %"class.RWTexture2D<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!12 = !{!13}
!13 = !{i32 0, %CB0* undef, !"", i32 0, i32 0, i32 1, i32 60, null}
!14 = !{void ()* @main, !"main", null, !4, !15}
!15 = !{i32 0, i64 532480, i32 4, !16}
!16 = !{i32 16, i32 16, i32 1}
!17 = !{!18, !18, i64 0}
!18 = !{!"float", !19, i64 0}
!19 = !{!"omnipotent char", !20, i64 0}
!20 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_pVRSContrastAdaptive16x16_RGB2_CS[] = {
  0x44, 0x58, 0x42, 0x43, 0x3f, 0x65, 0x58, 0xa8, 0x26, 0x0e, 0xe8, 0xd3,
  0xa4, 0xd9, 0x3b, 0xec, 0x40, 0xca, 0xbe, 0x8f, 0x01, 0x00, 0x00, 0x00,
  0x54, 0x1f, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x38, 0x01, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 0xac, 0x0d, 0x00, 0x00,
  0xc8, 0x0d, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xc0, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x5c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x53, 0x54, 0x41, 0x54, 0x08, 0x0c, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0x02, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xf0, 0x0b, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xf9, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf8, 0xc1, 0x0c, 0x40, 0x02, 0x01, 0x83,
  0x08, 0xc1, 0x90, 0x80, 0x02, 0xc0, 0x20, 0xc2, 0x30, 0x8c, 0x00, 0x94,
  0xa0, 0x20, 0x63, 0x8e, 0x00, 0x0c, 0xca, 0x80, 0x20, 0x08, 0x25, 0x45,
  0x40, 0x10, 0x5a, 0xe6, 0x08, 0x90, 0x52, 0x00, 0x08, 0xd0, 0x34, 0xe4,
  0x94, 0xa1, 0x40, 0x10, 0x82, 0xca, 0x00, 0x20, 0x00, 0x49, 0x85, 0x00,
  0x10, 0x00, 0x20, 0xea, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f,
  0x25, 0xa4, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x51, 0x01, 0x00, 0x00, 0x80,
  0x50, 0x73, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd,
  0xb0, 0x10, 0x28, 0xb8, 0x8a, 0x62, 0x21, 0x18, 0x82, 0x20, 0x08, 0x82,
  0x20, 0x94, 0x95, 0xa5, 0x40, 0x30, 0x04, 0x41, 0x10, 0x04, 0x41, 0x1a,
  0xda, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a,
  0x89, 0xc9, 0x47, 0x6e, 0x1b, 0x15, 0x08, 0x82, 0x20, 0x48, 0x51, 0x3a,
  0x04, 0x43, 0x10, 0x04, 0x41, 0x10, 0x84, 0xbc, 0x39, 0x82, 0xa0, 0x08,
  0x20, 0x42, 0x61, 0x29, 0x00, 0x04, 0x00, 0x00, 0x1a, 0x0b, 0x02, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x65, 0x19, 0x00, 0x04, 0xa1, 0xf3, 0xa8,
  0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26,
  0x1f, 0xb9, 0x6d, 0x44, 0x20, 0x08, 0x82, 0x14, 0x22, 0x45, 0x30, 0x84,
  0xd4, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a,
  0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x01, 0x00, 0x00, 0x50, 0x08, 0x16,
  0xc1, 0x10, 0x6a, 0x8b, 0x81, 0x21, 0x0d, 0x82, 0x80, 0xf4, 0x0e, 0x04,
  0xcc, 0xf4, 0x8d, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xc8,
  0xc2, 0x2d, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94,
  0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd4, 0x83, 0x3b, 0xcc, 0x43, 0x3a, 0x9c,
  0x83, 0x3b, 0x94, 0x03, 0x39, 0x80, 0x41, 0x3a, 0xb8, 0x03, 0x3d, 0xf8,
  0x01, 0x0a, 0x10, 0x92, 0x87, 0x11, 0x06, 0x60, 0x26, 0x32, 0x18, 0x07,
  0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0x90, 0x85, 0x5b, 0xa0, 0x85,
  0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05,
  0x3e, 0xb0, 0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03,
  0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0x98, 0x03,
  0x3f, 0x00, 0x03, 0x3f, 0x40, 0x01, 0x4d, 0xf5, 0x30, 0x82, 0x00, 0xcc,
  0x44, 0x06, 0xe3, 0xc0, 0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2,
  0x70, 0x0b, 0xb4, 0x50, 0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5,
  0x20, 0x07, 0xa4, 0xc0, 0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef,
  0x20, 0x0f, 0x7c, 0x60, 0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c,
  0x00, 0x06, 0x72, 0xe0, 0x07, 0x60, 0xe0, 0x07, 0x28, 0xb8, 0x09, 0x1f,
  0x46, 0x10, 0x90, 0x1b, 0xb8, 0x8d, 0x46, 0x8e, 0x8e, 0x00, 0x00, 0x00,
  0x20, 0x08, 0x82, 0x20, 0x08, 0x82, 0xd0, 0x3e, 0x47, 0x00, 0x0a, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x44, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x00, 0xe6, 0x00, 0x60, 0xe6, 0x00, 0x60, 0xe6, 0x00, 0x60,
  0xe6, 0x00, 0x60, 0xee, 0xf4, 0x01, 0x78, 0xc8, 0x63, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x27, 0x01, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x02,
  0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e,
  0x04, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x16, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x38, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0d, 0x08, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc2,
  0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x63, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x9e, 0x32, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0xcf, 0x19, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x47, 0x0d, 0x80, 0x00, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xd3, 0x06, 0x40, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x03,
  0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02,
  0x01, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xea,
  0x0b, 0x10, 0x30, 0x88, 0x90, 0x12, 0x28, 0x82, 0x11, 0x80, 0x62, 0x28,
  0x85, 0x92, 0x28, 0x83, 0xc2, 0x2b, 0x87, 0x82, 0x28, 0x8c, 0x02, 0x29,
  0x94, 0x82, 0x29, 0x9c, 0x02, 0x2a, 0xa4, 0x82, 0x2a, 0xac, 0x02, 0x2b,
  0xb4, 0x82, 0x2b, 0x84, 0x02, 0x04, 0x29, 0xd8, 0x80, 0x52, 0x26, 0x28,
  0x1e, 0x02, 0x47, 0x00, 0x6a, 0x80, 0xe6, 0x19, 0x00, 0xb2, 0x67, 0x00,
  0x28, 0x9f, 0x01, 0xa0, 0x7d, 0x06, 0x80, 0xf8, 0x19, 0x00, 0x1a, 0x66,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x44, 0x9b, 0x20, 0x20,
  0xdb, 0x06, 0x61, 0x20, 0x26, 0x08, 0x08, 0xb7, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x04, 0xa4, 0xdb, 0x30, 0x20, 0x09, 0x31, 0x41, 0x98,
  0x83, 0x3b, 0x20, 0x65, 0x25, 0x35, 0x35, 0x85, 0x16, 0x46, 0x96, 0xe6,
  0x76, 0x26, 0x15, 0x46, 0x57, 0x26, 0x54, 0x67, 0x66, 0x56, 0x26, 0x37,
  0x41, 0x00, 0x83, 0x3a, 0x98, 0x20, 0x20, 0xde, 0x06, 0xc1, 0x70, 0x36,
  0x2c, 0xc6, 0xc2, 0x18, 0xc6, 0x40, 0x34, 0x4d, 0xf3, 0x4c, 0x10, 0xec,
  0x00, 0x0f, 0x08, 0x41, 0xbd, 0xcd, 0xd1, 0x15, 0x99, 0x99, 0x95, 0x8d,
  0xd1, 0xcd, 0x25, 0xb5, 0x85, 0x9d, 0x95, 0x4d, 0x10, 0x90, 0x6f, 0x83,
  0x60, 0x4c, 0x1b, 0x96, 0x21, 0x92, 0x8c, 0x61, 0x20, 0x9a, 0xa6, 0xa1,
  0xe8, 0x58, 0x95, 0xb1, 0xbd, 0x8d, 0xa5, 0xd1, 0xe5, 0x09, 0xd5, 0x99,
  0x99, 0x95, 0xc9, 0x6d, 0x58, 0x88, 0xc5, 0x32, 0x88, 0x81, 0x68, 0x9a,
  0xe6, 0x99, 0x20, 0x20, 0x60, 0x30, 0x41, 0xc8, 0x83, 0x3c, 0xa0, 0x55,
  0x05, 0x37, 0x37, 0x16, 0xc6, 0x56, 0x46, 0x66, 0x55, 0xc6, 0xf6, 0x36,
  0x96, 0x46, 0x97, 0x27, 0x54, 0x67, 0x66, 0x56, 0x26, 0xb7, 0x61, 0xc1,
  0x32, 0xcd, 0xc0, 0x06, 0xa2, 0x69, 0x1a, 0x6a, 0x03, 0x01, 0x55, 0xd7,
  0x36, 0x41, 0xe0, 0x83, 0x3d, 0xe0, 0x30, 0x24, 0x04, 0x33, 0x41, 0x40,
  0xc2, 0x60, 0x03, 0x62, 0x74, 0x9e, 0x61, 0x0c, 0x1f, 0xb0, 0x21, 0x00,
  0x83, 0x0d, 0x04, 0xc0, 0x85, 0x01, 0x30, 0x41, 0xd8, 0x03, 0x3d, 0xe0,
  0x42, 0x55, 0x86, 0x47, 0x57, 0x27, 0x57, 0x36, 0x95, 0xa6, 0x57, 0x36,
  0x41, 0x40, 0xc4, 0x60, 0x83, 0x91, 0x90, 0x01, 0x66, 0x94, 0x81, 0xc3,
  0x69, 0x0a, 0x2d, 0x8c, 0x2c, 0xcd, 0xed, 0x4c, 0x2a, 0x8c, 0xae, 0x8c,
  0x2a, 0x8d, 0xad, 0x6c, 0x2a, 0x4d, 0xaf, 0x6c, 0x82, 0x80, 0x8c, 0xc1,
  0x06, 0x23, 0x39, 0x03, 0x0c, 0x0d, 0xca, 0xc0, 0x21, 0x35, 0x55, 0xe6,
  0x36, 0x97, 0x46, 0x97, 0x66, 0x97, 0x46, 0x97, 0x47, 0x85, 0x26, 0x57,
  0x36, 0x87, 0xf6, 0xc6, 0x46, 0x36, 0x41, 0x40, 0xc8, 0x60, 0x82, 0x00,
  0x06, 0x76, 0xb0, 0x01, 0x49, 0xd4, 0x00, 0x5b, 0x83, 0x32, 0x98, 0x26,
  0x36, 0xe0, 0x51, 0xe4, 0x66, 0xc7, 0x54, 0xd7, 0x16, 0x36, 0x41, 0x40,
  0xca, 0x60, 0x03, 0x92, 0xb8, 0x01, 0xf6, 0x06, 0x65, 0x30, 0x4d, 0x6c,
  0xc0, 0x60, 0x69, 0x82, 0x80, 0x98, 0xc1, 0x06, 0x24, 0x89, 0x03, 0x4c,
  0x0e, 0xca, 0x60, 0x9a, 0xd8, 0x80, 0xd4, 0x55, 0x99, 0x58, 0x99, 0x9c,
  0x51, 0xd9, 0x18, 0x9a, 0x5b, 0x99, 0xdc, 0xd0, 0x9b, 0xdb, 0x1c, 0x5d,
  0x98, 0x1b, 0xdd, 0x04, 0x01, 0x39, 0x83, 0x0d, 0x48, 0x42, 0x07, 0x58,
  0x1d, 0x94, 0xc1, 0x34, 0xb1, 0x01, 0x9f, 0xaa, 0xb9, 0xb2, 0xab, 0x32,
  0xb1, 0x32, 0x39, 0xa3, 0xb2, 0x31, 0x34, 0xb7, 0x32, 0xb9, 0x09, 0x02,
  0x82, 0x06, 0x1b, 0x90, 0xe4, 0x0e, 0x30, 0x3c, 0x28, 0x83, 0x61, 0x62,
  0x03, 0x42, 0x55, 0x73, 0x65, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x56,
  0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x13, 0x04, 0x24, 0x0d, 0x36, 0x20,
  0x89, 0x1e, 0x60, 0x7b, 0x50, 0x06, 0xc3, 0xc4, 0x06, 0x84, 0x82, 0xd8,
  0xd8, 0xde, 0xee, 0xa2, 0xea, 0xc2, 0xe4, 0xe8, 0xca, 0xe4, 0xa4, 0xc2,
  0xe8, 0xca, 0x26, 0x08, 0x88, 0x1a, 0x6c, 0x40, 0x92, 0x3e, 0xc0, 0xfc,
  0xa0, 0x0c, 0x86, 0x89, 0x0d, 0xb8, 0x38, 0x85, 0xd1, 0xa5, 0xd9, 0x95,
  0x5d, 0xa5, 0x91, 0xd1, 0xa1, 0x4d, 0x10, 0x90, 0x35, 0xd8, 0x80, 0x24,
  0xa0, 0x80, 0x85, 0x42, 0x19, 0x38, 0x13, 0x1b, 0x90, 0x71, 0x0a, 0xa3,
  0x4b, 0xb3, 0x2b, 0x43, 0x2a, 0x4b, 0x3b, 0x43, 0xa3, 0x9b, 0x20, 0x20,
  0x6c, 0xb0, 0x01, 0x49, 0x46, 0x01, 0x23, 0x85, 0x32, 0x70, 0x26, 0x36,
  0x60, 0x53, 0x05, 0x37, 0x37, 0x16, 0xc6, 0x56, 0x46, 0x76, 0x95, 0x46,
  0x46, 0x87, 0x36, 0x41, 0x40, 0xda, 0x60, 0x03, 0x92, 0x98, 0x02, 0x76,
  0x0a, 0x65, 0xe0, 0x4c, 0x6c, 0x40, 0xa7, 0x0a, 0x6e, 0x6e, 0x2c, 0x8c,
  0xad, 0x8c, 0x0c, 0xa9, 0x2c, 0xed, 0x0c, 0x8d, 0x6e, 0x82, 0x80, 0xb8,
  0xc1, 0x06, 0x24, 0x49, 0x05, 0x4c, 0x15, 0xca, 0xc0, 0x99, 0xd8, 0x80,
  0x58, 0xd5, 0x5c, 0x59, 0x15, 0xdc, 0xdc, 0x58, 0x18, 0x5b, 0x19, 0x59,
  0xd3, 0x1b, 0x5d, 0xda, 0x9b, 0x9b, 0x55, 0xd9, 0x18, 0xdd, 0x9b, 0xdc,
  0xdc, 0x04, 0x01, 0x79, 0x83, 0x0d, 0x48, 0xc2, 0x0a, 0x58, 0x2b, 0x94,
  0xc1, 0x30, 0xb1, 0xc1, 0x86, 0xe7, 0x33, 0x83, 0x34, 0x68, 0x03, 0x38,
  0x98, 0x03, 0x3b, 0xc8, 0x03, 0x3e, 0xf8, 0x03, 0x51, 0x28, 0x05, 0x54,
  0x58, 0x05, 0x57, 0xd8, 0x30, 0x18, 0x63, 0xf0, 0x0a, 0x13, 0x84, 0xa3,
  0xd8, 0x00, 0x6c, 0x18, 0x0c, 0x59, 0x90, 0x85, 0x0d, 0xc1, 0x2c, 0x6c,
  0x18, 0x86, 0x58, 0xa0, 0x05, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13, 0x84,
  0x3e, 0xc8, 0x26, 0x08, 0x08, 0x1c, 0x6c, 0x18, 0xde, 0xe0, 0x0d, 0x86,
  0x0d, 0x84, 0x71, 0x0b, 0xb8, 0x90, 0x0b, 0x1b, 0x8a, 0x58, 0xb0, 0x05,
  0x40, 0x0c, 0x74, 0x81, 0x50, 0x98, 0x9c, 0x5c, 0x58, 0xde, 0x17, 0xdd,
  0xd9, 0x5c, 0xdb, 0x97, 0x58, 0x1e, 0x5d, 0xd9, 0xdc, 0x04, 0x01, 0x89,
  0x03, 0x3e, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x67, 0x73, 0x6d,
  0x5f, 0x6c, 0x64, 0x73, 0x74, 0x3c, 0xc4, 0xc2, 0xe4, 0xe4, 0xd2, 0xca,
  0xe4, 0x88, 0x88, 0xc9, 0x85, 0xb9, 0x8d, 0xa1, 0x95, 0xcd, 0xd1, 0x30,
  0x63, 0x7b, 0x0b, 0xa3, 0x9b, 0x9b, 0x20, 0x20, 0x72, 0xc0, 0x22, 0xcd,
  0x6d, 0x8e, 0x6e, 0x6e, 0x82, 0x80, 0xcc, 0x01, 0x89, 0x34, 0x37, 0xba,
  0x39, 0x22, 0x74, 0x65, 0x78, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0xe8,
  0xca, 0xf0, 0xbe, 0xe6, 0xe8, 0xde, 0xe4, 0xca, 0x58, 0xd4, 0xa5, 0xb9,
  0xd1, 0xcd, 0x4d, 0x10, 0x10, 0x3a, 0xd8, 0x40, 0xf1, 0x42, 0x2f, 0xf8,
  0xc2, 0x1b, 0xfc, 0x02, 0x06, 0x0e, 0x68, 0x10, 0x0e, 0xe2, 0x30, 0x0e,
  0xe4, 0x50, 0x0e, 0xa1, 0x60, 0x0e, 0xce, 0x39, 0x0c, 0xe8, 0x90, 0x0e,
  0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6,
  0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37,
  0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae,
  0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23,
  0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12, 0x24, 0x65, 0xc8,
  0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6,
  0x04, 0x61, 0x50, 0x89, 0x0c, 0xcf, 0x85, 0x2e, 0x0f, 0xae, 0x2c, 0xc8,
  0xcd, 0xed, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x6e, 0x8a, 0xf0,
  0x0a, 0xb4, 0x50, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f,
  0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0xa0, 0x0b, 0x5d, 0xc8, 0xf0,
  0x5c, 0xc6, 0xde, 0xea, 0xdc, 0xe8, 0xca, 0xe4, 0xe6, 0xa6, 0x04, 0xe9,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x45, 0x30, 0x06, 0x81,
  0x9f, 0xbb, 0x9c, 0x3e, 0xa3, 0xc5, 0x6f, 0x39, 0xfa, 0xfd, 0x26, 0x03,
  0x81, 0x33, 0x68, 0x30, 0x0b, 0x13, 0x06, 0x81, 0x24, 0xd2, 0x30, 0xd8,
  0x0c, 0xba, 0x62, 0xe4, 0x74, 0xbb, 0x02, 0xa8, 0xc0, 0xef, 0x1e, 0xb6,
  0x97, 0x99, 0xf5, 0x76, 0x78, 0x5a, 0x6f, 0x03, 0x81, 0x33, 0x68, 0xb0,
  0x19, 0x2c, 0x81, 0x2a, 0xf0, 0xbb, 0x87, 0xed, 0x65, 0x66, 0xbd, 0x1d,
  0x9e, 0xd6, 0xdb, 0x58, 0x20, 0x70, 0x06, 0x0d, 0x36, 0x83, 0x35, 0x50,
  0x05, 0x7e, 0xf7, 0xb0, 0xbd, 0xcc, 0xac, 0xb7, 0xc3, 0xd3, 0x7a, 0x3b,
  0x0b, 0x04, 0xce, 0xa0, 0xc1, 0x66, 0xb0, 0x00, 0xb0, 0xc0, 0xef, 0x1e,
  0xb6, 0x97, 0xad, 0x65, 0xf6, 0x7b, 0x9c, 0xa6, 0xe7, 0x9b, 0x69, 0x37,
  0x10, 0x38, 0x83, 0x06, 0x9b, 0x41, 0x63, 0x68, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x00, 0xa2, 0x08, 0x21, 0x22, 0x73, 0x80, 0x86, 0xcb, 0x77, 0x1e,
  0x3f, 0x40, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0xed, 0x62, 0x1b, 0x2e,
  0xdf, 0x79, 0x7c, 0x21, 0xa0, 0x8a, 0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a,
  0xc2, 0x00, 0x04, 0xcc, 0x2f, 0x6e, 0xdb, 0x2c, 0xb6, 0xe1, 0xf2, 0x9d,
  0xc7, 0x17, 0x02, 0xaa, 0x28, 0x88, 0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c,
  0x40, 0xc0, 0x7c, 0xe4, 0xb6, 0x0d, 0x43, 0x1a, 0x2e, 0xdf, 0x79, 0x7c,
  0x21, 0x22, 0x80, 0x89, 0x08, 0x81, 0x66, 0x58, 0x08, 0xa3, 0x70, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x70, 0xa6, 0xdb, 0x2f, 0x6e, 0xdb, 0x0e, 0xc4,
  0x60, 0xb8, 0x7c, 0xe7, 0xf1, 0x8b, 0x05, 0x98, 0x26, 0xa2, 0x21, 0x86,
  0xf6, 0x88, 0x08, 0x60, 0x10, 0x07, 0xb1, 0x01, 0x23, 0x87, 0x7a, 0x7c,
  0xe4, 0xb6, 0xcd, 0x20, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x23, 0x72, 0xa8,
  0x47, 0x1c, 0x7c, 0xe4, 0xb6, 0xad, 0x82, 0x1a, 0x2e, 0xdf, 0x79, 0xfc,
  0x85, 0x30, 0x00, 0x01, 0xfb, 0x6a, 0xbd, 0x75, 0xbe, 0xdb, 0xb6, 0x09,
  0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0x22, 0x9a, 0x10, 0x20, 0xc2, 0xfc,
  0xe2, 0xb6, 0xed, 0xa1, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26,
  0x2a, 0x22, 0x4a, 0x07, 0x18, 0xfc, 0xe2, 0xb6, 0x2d, 0xa2, 0x1a, 0x2e,
  0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22, 0x4a, 0x07, 0x18, 0x7c,
  0xe4, 0xb6, 0x0d, 0xc2, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26,
  0x2a, 0x22, 0xd8, 0xc9, 0x89, 0x08, 0x1f, 0xb9, 0x6d, 0x4b, 0x90, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4, 0xc1, 0x47, 0x6e,
  0xdb, 0x10, 0xb2, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x8e, 0x88, 0x00, 0x06,
  0x71, 0x10, 0x1b, 0x30, 0x72, 0xa8, 0xc7, 0x47, 0x6e, 0xdb, 0x1a, 0x9e,
  0xe1, 0xf2, 0x9d, 0xc7, 0xa7, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0x6d,
  0xc1, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x0b, 0xa8, 0x08, 0x4d, 0x98, 0x90,
  0x8a, 0x40, 0x1f, 0xbf, 0xb8, 0x6d, 0x53, 0xb0, 0x86, 0xcb, 0x77, 0x1e,
  0xdf, 0x02, 0x2a, 0x02, 0x24, 0xa6, 0x12, 0x68, 0x08, 0xce, 0xa1, 0x9a,
  0xc9, 0x24, 0xaa, 0xe1, 0xf2, 0x9d, 0xc7, 0xb7, 0x80, 0x8a, 0x10, 0xa5,
  0x0f, 0x89, 0xa4, 0xa9, 0x04, 0x1a, 0xc2, 0x0a, 0x08, 0x06, 0x40, 0x1a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x5c, 0xb1, 0x71,
  0x8d, 0x90, 0x45, 0x07, 0x9d, 0x31, 0x8d, 0xd4, 0x89, 0xf4, 0xd9, 0x20,
  0x44, 0x58, 0x49, 0x4c, 0x84, 0x11, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00,
  0x61, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x6c, 0x11, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x1c, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xe4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x72, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x39, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x80,
  0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86, 0x09, 0x01, 0x01, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x32, 0x22, 0xc8, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x93, 0x23, 0xa4, 0x84, 0x04, 0x93, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8e, 0x8c, 0x0b, 0x84, 0xe4, 0x4c,
  0x10, 0x80, 0xc2, 0x0c, 0x40, 0x02, 0x01, 0x06, 0x11, 0x82, 0x21, 0x01,
  0x05, 0x00, 0x83, 0x08, 0xc3, 0x30, 0x02, 0x50, 0x82, 0x02, 0x19, 0xe6,
  0x08, 0xc0, 0xa0, 0x0c, 0x08, 0x04, 0x82, 0x12, 0x45, 0x40, 0x20, 0x68,
  0x31, 0x47, 0x80, 0x94, 0x02, 0x80, 0x00, 0x34, 0x1a, 0xe4, 0x28, 0x43,
  0x01, 0x81, 0x20, 0x48, 0x19, 0x00, 0x08, 0x00, 0x49, 0x0a, 0x01, 0x40,
  0x00, 0x00, 0x44, 0xb9, 0x69, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f,
  0x09, 0x69, 0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x54, 0x00, 0x00, 0x00, 0x00,
  0x82, 0x1a, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21, 0xd0,
  0x0c, 0x0b, 0x81, 0x82, 0x4b, 0x51, 0x2c, 0x08, 0x0c, 0x02, 0x81, 0x40,
  0x20, 0x10, 0x08, 0xca, 0x94, 0xa5, 0x80, 0xc0, 0x20, 0x10, 0x08, 0x04,
  0x02, 0x81, 0x68, 0xd0, 0xe6, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24,
  0x7f, 0x25, 0xa4, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x51, 0x81, 0x40, 0x20,
  0x10, 0x88, 0xa2, 0x74, 0x10, 0x18, 0x04, 0x02, 0x81, 0x40, 0x20, 0x10,
  0xe4, 0x99, 0x23, 0x08, 0x8a, 0x00, 0x42, 0x50, 0xa8, 0x14, 0x00, 0x04,
  0x00, 0x00, 0xa0, 0x51, 0x41, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x54, 0x06, 0x00, 0x02, 0x41, 0xa7, 0xa3, 0x86, 0xcb, 0x9f, 0xb0,
  0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11,
  0x81, 0x40, 0x20, 0x10, 0x85, 0x48, 0x21, 0x30, 0x08, 0x52, 0x1d, 0x35,
  0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4,
  0x17, 0xb7, 0x8d, 0x08, 0x00, 0x00, 0x00, 0x28, 0x04, 0x0b, 0x81, 0x41,
  0x50, 0xab, 0x18, 0x18, 0x44, 0x03, 0x81, 0x00, 0xd1, 0x6b, 0x20, 0x60,
  0xa6, 0x6f, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16,
  0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c,
  0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f,
  0x50, 0x80, 0x20, 0xd9, 0x30, 0xc2, 0x00, 0xcc, 0x44, 0x06, 0xe3, 0xc0,
  0x0e, 0xe1, 0x30, 0x0f, 0xf3, 0xe0, 0x06, 0xb2, 0x70, 0x0b, 0xb4, 0x50,
  0x0e, 0xf8, 0x40, 0x0f, 0xf5, 0x20, 0x0f, 0xe5, 0x20, 0x07, 0xa4, 0xc0,
  0x07, 0xf6, 0x50, 0x0e, 0xe3, 0x40, 0x0f, 0xef, 0x20, 0x0f, 0x7c, 0x60,
  0x0e, 0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x6c, 0x00, 0x06, 0x73, 0xe0,
  0x07, 0x60, 0xe0, 0x07, 0x28, 0xa0, 0x51, 0x6d, 0x18, 0x41, 0x00, 0x66,
  0x22, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x59,
  0xb8, 0x05, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72,
  0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77,
  0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x36,
  0x00, 0x03, 0x39, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x14, 0xdc, 0x08, 0x37,
  0x8c, 0x20, 0x20, 0x37, 0x70, 0x1b, 0x8d, 0x1c, 0x1d, 0x02, 0x00, 0x00,
  0x00, 0x10, 0x08, 0x04, 0x02, 0x81, 0x40, 0x20, 0x68, 0x37, 0x47, 0x00,
  0x0a, 0x53, 0x00, 0x83, 0x08, 0xc0, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x44, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0xe6,
  0x00, 0x60, 0xe6, 0x00, 0x60, 0xe6, 0x00, 0x60, 0xe6, 0x00, 0x60, 0xee,
  0xac, 0x01, 0x78, 0xc8, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x90, 0x27, 0x01, 0x02, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x02, 0x04, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x09, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x16, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x38,
  0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x23, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x87, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0d, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc2, 0x00, 0x08, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x63, 0x00, 0x04,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x32,
  0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0xcf, 0x19, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0x47, 0x0d, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0xc8, 0xd3, 0x06, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x03, 0x20, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xea, 0x8d, 0x00, 0x10, 0xa2,
  0x04, 0x8a, 0xa0, 0x18, 0x46, 0x00, 0x4a, 0xa1, 0x24, 0xca, 0xa0, 0xf0,
  0x0a, 0xa1, 0x40, 0x08, 0x34, 0x02, 0x40, 0xbd, 0x02, 0x04, 0x0c, 0x22,
  0xdb, 0x0c, 0x00, 0xe5, 0x66, 0x00, 0x88, 0x37, 0x03, 0x40, 0xb3, 0x19,
  0x00, 0x1a, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x62, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0x44, 0x9b, 0x20, 0x20, 0xdb, 0x06, 0x61, 0x20, 0x26, 0x08, 0x08, 0xb7,
  0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06, 0xc4, 0x20, 0x26, 0x08,
  0x48, 0x37, 0x41, 0x98, 0x83, 0x34, 0x20, 0x30, 0x41, 0x00, 0x03, 0x32,
  0x98, 0x20, 0x20, 0xde, 0x06, 0x41, 0x71, 0x36, 0x2c, 0xca, 0xc2, 0x28,
  0xca, 0x40, 0x34, 0x4d, 0xf3, 0x4c, 0x10, 0xec, 0xc0, 0x0c, 0x26, 0x08,
  0xc8, 0xb7, 0x41, 0x50, 0xa4, 0x0d, 0xcb, 0x10, 0x31, 0xca, 0x30, 0x10,
  0x4d, 0xd3, 0x4c, 0x1b, 0x16, 0x62, 0x61, 0x14, 0x62, 0x20, 0x9a, 0xa6,
  0x79, 0x26, 0x08, 0x08, 0x18, 0x4c, 0x10, 0xf2, 0xe0, 0x0c, 0x36, 0x2c,
  0xd6, 0xc5, 0x28, 0xd6, 0x40, 0x34, 0x4d, 0x33, 0x6d, 0x20, 0x20, 0xaa,
  0xc2, 0x26, 0x08, 0x7c, 0x80, 0x06, 0x13, 0x04, 0x24, 0x0c, 0x36, 0x20,
  0x8a, 0xc6, 0x28, 0xca, 0xb0, 0x01, 0x1b, 0x02, 0x6e, 0x03, 0x01, 0x64,
  0x1d, 0x30, 0x41, 0x38, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13, 0x84,
  0x3e, 0x28, 0x83, 0x09, 0x02, 0x22, 0x06, 0x13, 0x04, 0x64, 0x0c, 0x36,
  0x0c, 0x63, 0x30, 0x06, 0xc3, 0x06, 0x42, 0x09, 0x03, 0x31, 0x20, 0x83,
  0x0d, 0xc5, 0x07, 0x06, 0x80, 0x57, 0x06, 0x2c, 0xcc, 0xd8, 0xde, 0xc2,
  0xe8, 0xf8, 0xbc, 0xb5, 0xb9, 0xa5, 0xc1, 0xbd, 0xd1, 0x95, 0xb9, 0xd1,
  0x81, 0x8c, 0xa1, 0x85, 0xc9, 0x31, 0x9a, 0x4a, 0x6b, 0x83, 0x63, 0x2b,
  0x03, 0x19, 0x7a, 0x19, 0x5a, 0x59, 0x01, 0xa1, 0x12, 0x0a, 0x0a, 0xda,
  0x10, 0xa4, 0xc1, 0x04, 0xa1, 0x0f, 0xb2, 0x0d, 0x03, 0x1a, 0xa8, 0xc1,
  0x1a, 0x6c, 0x18, 0xce, 0x80, 0x0d, 0xd6, 0x60, 0xc3, 0xd0, 0x06, 0x6d,
  0xb0, 0x06, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca, 0xdc,
  0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9, 0xb9,
  0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e, 0x8c,
  0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99, 0x43,
  0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12, 0x20,
  0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca,
  0xe6, 0xa6, 0x04, 0x5d, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9,
  0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29, 0x41, 0x19, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x74, 0x00, 0x00, 0x00, 0x45, 0x30, 0x06, 0x81, 0x9f, 0xbb, 0x9c, 0x3e,
  0xa3, 0xc5, 0x6f, 0x39, 0xfa, 0xfd, 0x26, 0x03, 0x81, 0x33, 0x68, 0x30,
  0x0b, 0x13, 0x06, 0x81, 0x24, 0xd2, 0x30, 0xd8, 0x0c, 0xba, 0x62, 0xe4,
  0x74, 0xbb, 0x02, 0xa8, 0xc0, 0xef, 0x1e, 0xb6, 0x97, 0x99, 0xf5, 0x76,
  0x78, 0x5a, 0x6f, 0x03, 0x81, 0x33, 0x68, 0xb0, 0x19, 0x2c, 0x81, 0x2a,
  0xf0, 0xbb, 0x87, 0xed, 0x65, 0x66, 0xbd, 0x1d, 0x9e, 0xd6, 0xdb, 0x58,
  0x20, 0x70, 0x06, 0x0d, 0x36, 0x83, 0x35, 0x50, 0x05, 0x7e, 0xf7, 0xb0,
  0xbd, 0xcc, 0xac, 0xb7, 0xc3, 0xd3, 0x7a, 0x3b, 0x0b, 0x04, 0xce, 0xa0,
  0xc1, 0x66, 0xb0, 0x00, 0xb0, 0xc0, 0xef, 0x1e, 0xb6, 0x97, 0xad, 0x65,
  0xf6, 0x7b, 0x9c, 0xa6, 0xe7, 0x9b, 0x69, 0x37, 0x10, 0x38, 0x83, 0x06,
  0x9b, 0x41, 0x63, 0x68, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x00, 0xa2, 0x08,
  0x21, 0x22, 0x73, 0x80, 0x86, 0xcb, 0x77, 0x1e, 0x3f, 0x40, 0x1a, 0x20,
  0xc2, 0xfc, 0xe2, 0xb6, 0xed, 0x62, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21,
  0xa0, 0x8a, 0x82, 0x88, 0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc,
  0x2f, 0x6e, 0xdb, 0x2c, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7, 0x17, 0x02, 0xaa,
  0x28, 0x88, 0xa8, 0x74, 0x80, 0xa1, 0x24, 0x0c, 0x40, 0xc0, 0x7c, 0xe4,
  0xb6, 0x0d, 0x43, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0x22, 0x80, 0x89,
  0x08, 0x81, 0x66, 0x58, 0x08, 0xa3, 0x70, 0x86, 0xcb, 0x77, 0x1e, 0x7f,
  0x70, 0xa6, 0xdb, 0x2f, 0x6e, 0xdb, 0x0e, 0xc4, 0x60, 0xb8, 0x7c, 0xe7,
  0xf1, 0x8b, 0x05, 0x98, 0x26, 0xa2, 0x21, 0x86, 0xf6, 0x88, 0x08, 0x60,
  0x10, 0x07, 0xb1, 0x01, 0x23, 0x87, 0x7a, 0x7c, 0xe4, 0xb6, 0xcd, 0x20,
  0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x23, 0x72, 0xa8, 0x47, 0x1c, 0x7c, 0xe4,
  0xb6, 0xad, 0x82, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x85, 0x30, 0x00, 0x01,
  0xfb, 0x6a, 0xbd, 0x75, 0xbe, 0xdb, 0xb6, 0x09, 0x69, 0xb8, 0x7c, 0xe7,
  0xf1, 0x27, 0x22, 0x9a, 0x10, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0xed, 0xa1,
  0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22, 0x4a, 0x07,
  0x18, 0xfc, 0xe2, 0xb6, 0x2d, 0xa2, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89,
  0xb8, 0x26, 0x2a, 0x22, 0x4a, 0x07, 0x18, 0x7c, 0xe4, 0xb6, 0x0d, 0xc2,
  0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8, 0x26, 0x2a, 0x22, 0xd8, 0xc9,
  0x89, 0x08, 0x1f, 0xb9, 0x6d, 0x4b, 0x90, 0x86, 0xcb, 0x77, 0x1e, 0x7f,
  0x3a, 0x22, 0x02, 0x18, 0xc4, 0xc1, 0x47, 0x6e, 0xdb, 0x10, 0xb2, 0xe1,
  0xf2, 0x9d, 0xc7, 0x9f, 0x8e, 0x88, 0x00, 0x06, 0x71, 0x10, 0x1b, 0x30,
  0x72, 0xa8, 0xc7, 0x47, 0x6e, 0xdb, 0x1a, 0x9e, 0xe1, 0xf2, 0x9d, 0xc7,
  0xa7, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0x6d, 0xc1, 0x1a, 0x2e, 0xdf,
  0x79, 0x7c, 0x0b, 0xa8, 0x08, 0x4d, 0x98, 0x90, 0x8a, 0x40, 0x1f, 0xbf,
  0xb8, 0x6d, 0x53, 0xb0, 0x86, 0xcb, 0x77, 0x1e, 0xdf, 0x02, 0x2a, 0x02,
  0x24, 0xa6, 0x12, 0x68, 0x08, 0xce, 0xa1, 0x9a, 0xc9, 0x24, 0xaa, 0xe1,
  0xf2, 0x9d, 0xc7, 0xb7, 0x80, 0x8a, 0x10, 0xa5, 0x0f, 0x89, 0xa4, 0xa9,
  0x04, 0x1a, 0xc2, 0x0a, 0x08, 0x06, 0x40, 0x1a, 0x00, 0x00, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x13, 0x04, 0x52, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xd4, 0x28, 0x8f, 0x22,
  0x28, 0x81, 0x11, 0x00, 0x42, 0x94, 0x61, 0x40, 0x01, 0x12, 0x14, 0x77,
  0x40, 0x79, 0x94, 0x4f, 0xe1, 0xff, 0x15, 0x49, 0x39, 0x14, 0x78, 0x40,
  0x01, 0x07, 0x14, 0x20, 0x20, 0xc1, 0x0c, 0x40, 0x21, 0x95, 0x7b, 0x40,
  0xd9, 0x95, 0x5c, 0x11, 0x06, 0xd4, 0x40, 0xc1, 0x94, 0x5b, 0x81, 0x06,
  0x94, 0xa1, 0x40, 0x71, 0x15, 0x6f, 0x40, 0xf9, 0x06, 0x94, 0x6e, 0x40,
  0x81, 0xff, 0x11, 0x60, 0x8c, 0x00, 0x04, 0x41, 0x10, 0xf7, 0xc6, 0x08,
  0x44, 0x7d, 0x6e, 0xc5, 0x6f, 0x8c, 0x40, 0x3d, 0x43, 0xf4, 0xf6, 0x85,
  0x31, 0x02, 0x10, 0x04, 0x41, 0x38, 0x0c, 0xc6, 0x08, 0x40, 0x10, 0x04,
  0x45, 0x70, 0x18, 0x23, 0x00, 0x41, 0x10, 0x26, 0xc3, 0x60, 0x8c, 0x00,
  0x04, 0x41, 0x10, 0x1e, 0x83, 0x31, 0x02, 0x10, 0x04, 0x41, 0xf8, 0x1b,
  0x23, 0x00, 0x41, 0x10, 0xc4, 0xbf, 0x31, 0x02, 0x10, 0x04, 0x41, 0xbc,
  0x1b, 0x23, 0x00, 0x41, 0x18, 0x0f, 0xc7, 0x60, 0x8c, 0xe0, 0x56, 0xe7,
  0x33, 0xf7, 0xc6, 0x08, 0xf4, 0xb2, 0x74, 0xe7, 0x6f, 0x8c, 0xa0, 0x9d,
  0xe3, 0xb9, 0xfc, 0x46, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0xf0, 0x06, 0xa1, 0xb0, 0xb1, 0x41, 0x1e, 0xe4, 0x41, 0x1d,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0xc1, 0x1b, 0x88, 0x02, 0xd7, 0x06,
  0x7f, 0xf0, 0x07, 0x76, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x6f,
  0x30, 0x0a, 0x9d, 0x1b, 0x84, 0x42, 0x28, 0xdc, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0xbc, 0x01, 0x29, 0x78, 0x6f, 0xf0, 0x07, 0x7f, 0x80,
  0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xf0, 0x06, 0xa5, 0xf0, 0xc5,
  0x01, 0x28, 0x80, 0x42, 0x1e, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41,
  0x82, 0x0b, 0x58, 0x28, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x92,
  0x0b, 0x59, 0x29, 0x8c, 0x18, 0x14, 0x00, 0x08, 0x82, 0xc1, 0x92, 0x0b,
  0x68, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x49, 0x2e, 0x68, 0xa4,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x89, 0x2e, 0x6c, 0xa8, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x89, 0x2e, 0x6c, 0xa6, 0x30, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0xc9, 0x2e, 0x70, 0xaa, 0x30, 0x62, 0x50,
  0x00, 0x20, 0x08, 0x06, 0xcb, 0x2e, 0xb8, 0xc1, 0x88, 0x41, 0x03, 0x80,
  0x20, 0x18, 0x64, 0xb7, 0x70, 0x06, 0x0b, 0x1b, 0x0c, 0x02, 0x1b, 0xb0,
  0x01, 0x1b, 0xb0, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0xd4, 0xa1, 0x06, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06,
  0x19, 0x2f, 0xb0, 0x01, 0x14, 0x07, 0xc1, 0x11, 0x07, 0x71, 0x10, 0x07,
  0x71, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0xb5, 0xbc, 0x01, 0x8c, 0x18, 0x34, 0x00, 0x08, 0x82, 0x41, 0x16, 0x0e,
  0x71, 0x50, 0xd9, 0x41, 0x13, 0xd8, 0x81, 0x1d, 0xd8, 0x81, 0x1d, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x82, 0x35, 0x8d,
  0x7c, 0xac, 0x69, 0xe4, 0x63, 0x4d, 0x23, 0x9f, 0x11, 0x83, 0x05, 0x00,
  0x41, 0x30, 0x28, 0x83, 0x71, 0xa8, 0x83, 0x41, 0x08, 0xc0, 0x20, 0x0c,
  0xc4, 0xc0, 0x18, 0x46, 0x3e, 0xc6, 0x30, 0xf2, 0x31, 0x86, 0x91, 0xcf,
  0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x94, 0xc1, 0x39, 0xe4, 0xc1, 0x20,
  0x04, 0x64, 0x50, 0x06, 0x66, 0x60, 0xcb, 0x22, 0x1f, 0x5b, 0x16, 0xf9,
  0xd8, 0xb2, 0xc8, 0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xca, 0x60,
  0x1d, 0xfa, 0x60, 0x10, 0x02, 0x34, 0x48, 0x03, 0x35, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xa7, 0x1e, 0x48, 0x21, 0x91, 0x05, 0x59, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x35, 0x58, 0x07, 0x52, 0x20, 0x83,
  0x73, 0x18, 0x4d, 0x08, 0x86, 0xe1, 0x86, 0xc0, 0x1c, 0xc0, 0xc0, 0x9a,
  0x24, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x20, 0xe1, 0x43, 0x3a,
  0x04, 0xf6, 0x1c, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x03, 0x49,
  0x1f, 0xd6, 0x21, 0x98, 0x65, 0x10, 0x82, 0xa2, 0xce, 0xa0, 0x1c, 0xa4,
  0xce, 0x20, 0x80, 0x35, 0x18, 0x4c, 0xa2, 0x1d, 0x82, 0x61, 0x03, 0x22,
  0xa0, 0x06, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0x7f, 0x40,
  0x05, 0x76, 0x30, 0x35, 0x88, 0x07, 0x10, 0xd8, 0x1a, 0xb0, 0x02, 0x08,
  0x6c, 0x0d, 0xe6, 0x01, 0x04, 0xc6, 0x06, 0xae, 0x00, 0x82, 0x72, 0x03,
  0x76, 0x90, 0x12, 0x02, 0x58, 0x83, 0xa1, 0x25, 0xe8, 0x21, 0xa0, 0x00,
  0x30, 0x0a, 0x81, 0x07, 0x29, 0x23, 0x80, 0x35, 0x18, 0x62, 0x02, 0x1f,
  0x02, 0x0a, 0x00, 0xa3, 0x18, 0x7a, 0x90, 0xb2, 0x83, 0x00, 0xd6, 0x60,
  0xa8, 0x09, 0x7e, 0x08, 0x28, 0x00, 0x8c, 0x82, 0xf0, 0x41, 0xea, 0x09,
  0x60, 0x0d, 0x86, 0x9c, 0x00, 0x89, 0x80, 0x02, 0xc0, 0x28, 0x3f, 0xe0,
  0x07, 0xa9, 0x29, 0x80, 0x35, 0x18, 0x7a, 0x82, 0x24, 0x02, 0x0a, 0x00,
  0xa3, 0x2e, 0x90, 0x90, 0xba, 0x02, 0x58, 0x83, 0x21, 0x2c, 0x50, 0x22,
  0xa0, 0x00, 0x30, 0x6a, 0x23, 0x09, 0x29, 0x2d, 0x80, 0x35, 0x18, 0xca,
  0x82, 0x25, 0x02, 0x0a, 0x00, 0x63, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xa8, 0x9e, 0x80, 0x87, 0x5b, 0xc8, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0x80, 0xf2, 0x89, 0x78, 0x08, 0xac, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xa0, 0x7e, 0x42, 0x1e, 0x82, 0x69, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0x28, 0xb0, 0x98, 0x87, 0x00, 0x1a, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03,
  0x2a, 0x2c, 0xe8, 0x21, 0x68, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x80,
  0x12, 0x8b, 0x7a, 0x08, 0x94, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa0,
  0xc6, 0xc2, 0x1e, 0x82, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x28,
  0xb2, 0xb8, 0x87, 0x00, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x36,
  0xe0, 0x09, 0x7b, 0xb0, 0x85, 0x9c, 0x18, 0x4d, 0x08, 0x04, 0x1b, 0xcc,
  0x41, 0x3e, 0x16, 0xa0, 0x03, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0x40, 0x52, 0x8b, 0x90, 0x08, 0xcc, 0x1c, 0x82, 0xf8, 0x58, 0x50, 0xc8,
  0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x28, 0xb6, 0xf8, 0x87, 0x51,
  0xf8, 0x03, 0x0b, 0x04, 0xf8, 0xd8, 0x1d, 0x04, 0xf4, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0x47, 0x2e, 0x42, 0x22, 0x78, 0x89, 0x97, 0x18,
  0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x0a, 0x2e, 0x46, 0xe2, 0x14, 0xfe,
  0xc0, 0x02, 0x03, 0x3e, 0x96, 0x07, 0x01, 0x7d, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0xc0, 0xb1, 0x8b, 0x92, 0x08, 0x66, 0x62, 0x26, 0x66, 0x09,
  0x06, 0xeb, 0x83, 0x78, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x38, 0x78, 0x71, 0x12, 0x41, 0x4d, 0xd4, 0x84, 0xf5, 0xc1, 0x3c, 0xc8,
  0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x1c, 0xbd, 0x48, 0x89, 0xe0,
  0x26, 0x6e, 0x62, 0x96, 0x60, 0x18, 0xa8, 0x00, 0xa4, 0xc0, 0x10, 0x06,
  0x2a, 0x00, 0x26, 0x20, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x50,
  0x03, 0xb9, 0x58, 0x89, 0x75, 0x68, 0x8b, 0xd1, 0x84, 0x00, 0x18, 0x6e,
  0x08, 0xda, 0x02, 0x0c, 0x66, 0x19, 0x0e, 0x22, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x03, 0x35, 0xa8, 0x0b, 0x97, 0x70, 0x87, 0xb5, 0x18, 0x4d,
  0x08, 0x84, 0xe1, 0x86, 0x00, 0x2e, 0xc0, 0x60, 0x96, 0xc1, 0x28, 0x82,
  0xd1, 0x84, 0x01, 0xb8, 0x00, 0x50, 0xa3, 0x09, 0x88, 0x70, 0x01, 0xa0,
  0x6c, 0x08, 0xe8, 0x33, 0x9a, 0x80, 0x04, 0x17, 0x00, 0x6a, 0x34, 0xa1,
  0x19, 0x2e, 0x00, 0x94, 0x0d, 0x01, 0x7d, 0xae, 0x1e, 0x00, 0x65, 0x47,
  0x20, 0x9f, 0xb3, 0x07, 0x40, 0x19, 0x11, 0xc8, 0xe7, 0x06, 0xc4, 0x9c,
  0x80, 0x98, 0x11, 0x83, 0x06, 0x00, 0x41, 0x30, 0xc8, 0x5e, 0xe3, 0x27,
  0x4a, 0x82, 0x2c, 0x84, 0x80, 0x2c, 0xc8, 0x82, 0x2c, 0xc8, 0x62, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0xc0, 0x04, 0x41, 0x3e, 0x26, 0x08, 0xf2,
  0x31, 0x21, 0x80, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48, 0xb7,
  0x31, 0x16, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x38, 0xba, 0x91,
  0x16, 0x41, 0x5e, 0xdc, 0xc5, 0x2c, 0xc1, 0x31, 0x62, 0xd0, 0x00, 0x20,
  0x08, 0x06, 0x5e, 0x6d, 0x9c, 0x05, 0x4b, 0xb0, 0xc5, 0x48, 0x88, 0x04,
  0x5b, 0xb0, 0x05, 0x5b, 0xb0, 0xc5, 0x68, 0x42, 0x00, 0x54, 0x60, 0x1a,
  0x57, 0x01, 0x58, 0x68, 0x0d, 0xae, 0x71, 0x15, 0xc8, 0x85, 0xd6, 0x10,
  0xec, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x9c, 0x01, 0x6e, 0xa4, 0x45,
  0x60, 0x81, 0x4f, 0xc8, 0xa7, 0x90, 0xd9, 0xc0, 0x0a, 0xce, 0x42, 0x4b,
  0x79, 0x0d, 0xac, 0x20, 0x2f, 0xb4, 0x86, 0x60, 0x47, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x0c, 0x7e, 0x03, 0x2e, 0x02, 0x0b, 0xca, 0x42, 0x3e,
  0xf5, 0x84, 0x06, 0x56, 0x30, 0x1a, 0x5a, 0x51, 0x69, 0xa0, 0x05, 0xa7,
  0x71, 0x83, 0x1a, 0x82, 0x1d, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x33,
  0x30, 0x8f, 0xbb, 0x08, 0x2c, 0x78, 0x0b, 0xf9, 0xd8, 0xf3, 0xc8, 0xc7,
  0x92, 0x44, 0x3e, 0x16, 0x08, 0xf0, 0x31, 0x82, 0x90, 0x8f, 0x09, 0x01,
  0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0xaa, 0x8f, 0xd0, 0x08,
  0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xc0, 0xc1, 0x8f, 0xd3, 0x08, 0x6e,
  0xa3, 0x36, 0x66, 0x09, 0x8e, 0x81, 0x0e, 0xc0, 0x0f, 0x0a, 0xc1, 0xc0,
  0x95, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0xfc, 0x10, 0x0d,
  0xf3, 0x18, 0x31, 0x28, 0x00, 0x10, 0x04, 0x83, 0x30, 0x98, 0x0f, 0xda,
  0x98, 0x65, 0x40, 0x92, 0xa0, 0xcc, 0x22, 0x2c, 0x66, 0x05, 0x06, 0x13,
  0x51, 0x8f, 0x60, 0xd8, 0x80, 0x08, 0x50, 0x62, 0x00, 0x56, 0x60, 0x30,
  0x91, 0xf5, 0x10, 0x86, 0x0d, 0x88, 0x60, 0x14, 0x06, 0x60, 0x05, 0x06,
  0x13, 0x61, 0x8f, 0x61, 0xd8, 0x80, 0x08, 0x46, 0x61, 0x00, 0x56, 0x60,
  0x50, 0x91, 0xf6, 0x20, 0x86, 0x0d, 0x88, 0xe0, 0x18, 0x80, 0x59, 0x82,
  0x64, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0xff, 0x40, 0x0d, 0xf6,
  0x18, 0x6e, 0x58, 0x0b, 0xf7, 0x00, 0x83, 0x59, 0x06, 0x25, 0x0a, 0x8a,
  0x37, 0xce, 0x82, 0x86, 0x1b, 0x02, 0xf8, 0x30, 0x83, 0x59, 0x86, 0xc5,
  0x09, 0x66, 0x09, 0x98, 0x81, 0x0a, 0xe0, 0x61, 0xd8, 0x65, 0x19, 0xa8,
  0x00, 0x26, 0xc6, 0x5d, 0x96, 0x81, 0x0a, 0xe0, 0x62, 0xe0, 0x65, 0x19,
  0xa8, 0x00, 0x36, 0x46, 0x5f, 0x96, 0x81, 0x0a, 0x64, 0x63, 0xd4, 0x67,
  0x59, 0x81, 0x41, 0x46, 0xec, 0x23, 0xa0, 0x00, 0x30, 0x2c, 0x38, 0xe0,
  0xb3, 0x02, 0x03, 0x8d, 0xe4, 0x07, 0x41, 0x01, 0x60, 0x58, 0x90, 0xc0,
  0x67, 0x05, 0x06, 0x1b, 0xe1, 0x8f, 0x83, 0x02, 0xc0, 0xb0, 0x60, 0x81,
  0xcf, 0x0a, 0x0c, 0x3c, 0xf2, 0x1f, 0x0a, 0x05, 0x80, 0x31, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0x14, 0x8c, 0x8c, 0x47, 0x13, 0x58, 0x53, 0x22,
  0x30, 0x18, 0x6e, 0x08, 0x28, 0x34, 0x98, 0x65, 0x60, 0x9a, 0xa0, 0x18,
  0xd7, 0x90, 0x52, 0x5e, 0x43, 0x0a, 0x81, 0x0d, 0x99, 0x25, 0x70, 0x06,
  0x2a, 0x00, 0x9c, 0x51, 0x8c, 0x66, 0xa0, 0x02, 0xd0, 0x19, 0xc5, 0x68,
  0x06, 0x2a, 0x00, 0x9e, 0x51, 0x8c, 0x66, 0xa0, 0x02, 0x30, 0x1b, 0x45,
  0x6a, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x0d, 0x62, 0x64, 0x3d,
  0x56, 0x63, 0x45, 0x46, 0x13, 0x82, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xda, 0x60, 0x46, 0xda, 0xa3, 0x35, 0x60, 0x64, 0x34, 0x21, 0x00,
  0x2c, 0x40, 0xe0, 0x63, 0x01, 0x21, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41,
  0x30, 0x90, 0xc2, 0xa4, 0x3d, 0x92, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30,
  0x90, 0xc4, 0xc4, 0x3d, 0x92, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x18,
  0x83, 0x1e, 0x59, 0x0f, 0xf2, 0x48, 0x7c, 0x63, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xd4, 0x60, 0x47, 0xe8, 0x83, 0x36, 0x6c, 0x64, 0x34, 0x21,
  0x00, 0x86, 0x1b, 0x02, 0x1b, 0x09, 0x83, 0x0b, 0x00, 0x65, 0x41, 0x21,
  0x9f, 0xe1, 0x06, 0x22, 0x47, 0xc0, 0xe0, 0x02, 0x40, 0x59, 0x30, 0x40,
  0x67, 0x34, 0xe1, 0x09, 0xec, 0x3d, 0x82, 0xf8, 0x58, 0x10, 0x1f, 0xf2,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x31, 0x48, 0x93, 0xfb, 0x08,
  0xaa, 0xc1, 0x92, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30,
  0x06, 0x6b, 0x92, 0x1f, 0xc5, 0x11, 0xd8, 0x11, 0xc9, 0x67, 0x38, 0x22,
  0x98, 0x86, 0xcf, 0x86, 0x49, 0x3e, 0xc3, 0x11, 0x41, 0x45, 0x7c, 0xb6,
  0x50, 0xf2, 0x19, 0x8e, 0x08, 0xae, 0xe1, 0xb3, 0xc3, 0x92, 0xcf, 0x70,
  0x44, 0x90, 0x11, 0xdf, 0x68, 0x82, 0x15, 0x0c, 0x37, 0x04, 0x6b, 0x12,
  0x06, 0x17, 0x20, 0xc2, 0x02, 0x38, 0xb9, 0xc1, 0x70, 0x03, 0xe1, 0x26,
  0x60, 0x70, 0x01, 0x22, 0x2a, 0x18, 0x76, 0xba, 0x21, 0x88, 0x13, 0xa6,
  0x9e, 0x66, 0x2f, 0x40, 0x44, 0x05, 0x77, 0xc2, 0x46, 0x04, 0x30, 0x98,
  0x6e, 0x30, 0xec, 0xa4, 0x29, 0xc8, 0xd9, 0x0b, 0x10, 0x51, 0x01, 0x9f,
  0xb0, 0x11, 0x01, 0x0c, 0x86, 0x1b, 0x82, 0x3d, 0x01, 0x83, 0xe1, 0x86,
  0xc3, 0x4f, 0xc0, 0xa0, 0x84, 0x40, 0x67, 0x19, 0xa0, 0x27, 0x18, 0x6e,
  0x20, 0x40, 0x05, 0x0c, 0x86, 0x1b, 0x94, 0x3f, 0x01, 0x83, 0x12, 0x02,
  0x9d, 0x6e, 0x20, 0x95, 0x23, 0xb0, 0x86, 0x54, 0x6e, 0x30, 0x4b, 0x00,
  0x0d, 0x54, 0x20, 0xfc, 0xe4, 0x08, 0xcf, 0x40, 0x05, 0x82, 0x52, 0x8e,
  0xf1, 0x54, 0x20, 0xec, 0x88, 0x81, 0x03, 0x80, 0x20, 0x18, 0x6c, 0xb3,
  0x42, 0x27, 0x27, 0x52, 0x22, 0x24, 0x92, 0x26, 0x41, 0x10, 0x04, 0x78,
  0x32, 0x4b, 0x10, 0x61, 0x40, 0x0c, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x5b, 0x86, 0x39, 0x08, 0xda, 0x60, 0xcb, 0xc0, 0x07, 0x41, 0x1b, 0x6c,
  0x19, 0x40, 0x21, 0x68, 0x83, 0x2d, 0x03, 0x29, 0x04, 0x6d, 0xb0, 0x65,
  0x40, 0x85, 0xa0, 0x0d, 0xb6, 0x0c, 0xac, 0x10, 0xb4, 0xc1, 0x96, 0x01,
  0x16, 0x82, 0x36, 0xd8, 0x32, 0xd0, 0x42, 0xd0, 0x06, 0x5b, 0x06, 0xbd,
  0x08, 0xda, 0x60, 0xcb, 0xc0, 0x17, 0x41, 0x1b, 0x6c, 0x19, 0xfc, 0x22,
  0x68, 0x83, 0x2d, 0x03, 0x68, 0x04, 0x6d, 0xb0, 0x65, 0x78, 0x8d, 0xa0,
  0x0d, 0xb6, 0x0c, 0xb2, 0x11, 0xb4, 0xc1, 0x96, 0xa1, 0x36, 0x82, 0x36,
  0xd8, 0x32, 0xe0, 0x46, 0xd0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
