#if 0
;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 87469eeaef533720925d7a17bcbfdc08
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer CB0
; {
;
;   struct CB0
;   {
;
;       uint ShadingRateTileSize;                     ; Offset:    0
;       bool BlendMask;                               ; Offset:    4
;       bool DrawGrid;                                ; Offset:    8
;       uint NativeWidth;                             ; Offset:   12
;       uint NativeHeight;                            ; Offset:   16
;       uint UpscaledWidth;                           ; Offset:   20
;       uint UpscaledHeight;                          ; Offset:   24
;   
;   } CB0;                                            ; Offset:    0 Size:    28
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; CB0                               cbuffer      NA          NA     CB0            cb0     1
; VRSShadingRateBuffer                  UAV     u32          2d      U0             u0     1
; PostEffectsImage                      UAV     f32          2d      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%"class.RWTexture2D<vector<float, 3> >" = type { <3 x float> }
%CB0 = type { i32, i32, i32, i32, i32, i32, i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %5 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %6 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %7 = extractvalue %dx.types.CBufRet.i32 %6, 3
  %8 = uitofp i32 %7 to float
  %9 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %3, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %10 = extractvalue %dx.types.CBufRet.i32 %9, 1
  %11 = uitofp i32 %10 to float
  %12 = fdiv fast float %8, %11
  %13 = extractvalue %dx.types.CBufRet.i32 %9, 0
  %14 = uitofp i32 %13 to float
  %15 = extractvalue %dx.types.CBufRet.i32 %9, 2
  %16 = uitofp i32 %15 to float
  %17 = fdiv fast float %14, %16
  %18 = uitofp i32 %4 to float
  %19 = fmul fast float %12, %18
  %20 = uitofp i32 %5 to float
  %21 = fmul fast float %17, %20
  %22 = extractvalue %dx.types.CBufRet.i32 %6, 0
  %23 = uitofp i32 %22 to float
  %24 = fdiv fast float %19, %23
  %25 = fptoui float %24 to i32
  %26 = fdiv fast float %21, %23
  %27 = fptoui float %26 to i32
  %28 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 undef, i32 %25, i32 %27, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %29 = extractvalue %dx.types.ResRet.i32 %28, 0
  %30 = extractvalue %dx.types.CBufRet.i32 %6, 2
  %31 = icmp ne i32 %30, 0
  %32 = fptoui float %19 to i32
  %33 = urem i32 %32, %22
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

; <label>:35                                      ; preds = %0
  %36 = fptoui float %21 to i32
  %37 = urem i32 %36, %22
  %38 = icmp eq i32 %37, 0
  br label %39

; <label>:39                                      ; preds = %35, %0
  %40 = phi i1 [ true, %0 ], [ %38, %35 ]
  %41 = and i1 %31, %40
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %39
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %4, i32 %5, i32 undef, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %100

; <label>:43                                      ; preds = %39
  %44 = icmp eq i32 %29, 0
  br i1 %44, label %45, label %50

; <label>:45                                      ; preds = %43
  %46 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 undef, i32 %4, i32 %5, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %47 = extractvalue %dx.types.ResRet.f32 %46, 0
  %48 = extractvalue %dx.types.ResRet.f32 %46, 1
  %49 = extractvalue %dx.types.ResRet.f32 %46, 2
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %4, i32 %5, i32 undef, float %47, float %48, float %49, float %47, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %100

; <label>:50                                      ; preds = %43
  %51 = icmp eq i32 %29, 1
  %52 = icmp eq i32 %29, 6
  %53 = or i1 %51, %52
  %54 = fptoui float %21 to i32
  %55 = icmp eq i32 %33, 4
  %56 = urem i32 %54, %22
  %57 = icmp eq i32 %56, 4
  %58 = icmp eq i32 %56, 3
  %59 = add i32 %56, -3
  %60 = icmp ult i32 %59, 2
  %61 = and i1 %55, %60
  %62 = icmp eq i32 %33, 3
  %63 = and i1 %62, %57
  %64 = or i1 %61, %63
  %65 = and i1 %62, %58
  %66 = or i1 %64, %65
  %67 = and i1 %53, %66
  br i1 %67, label %68, label %69

; <label>:68                                      ; preds = %50
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %4, i32 %5, i32 undef, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %100

; <label>:69                                      ; preds = %50
  %70 = icmp eq i32 %29, 4
  %71 = or i1 %51, %70
  br i1 %71, label %82, label %72

; <label>:72                                      ; preds = %69
  %73 = icmp eq i32 %29, 5
  br i1 %73, label %82, label %74

; <label>:74                                      ; preds = %72
  %75 = icmp eq i32 %29, 10
  %76 = or i1 %75, %52
  %77 = select i1 %75, float 3.000000e+00, float 6.000000e+00
  %78 = select i1 %75, float 3.000000e+00, float 1.000000e+00
  br i1 %76, label %82, label %79

; <label>:79                                      ; preds = %74
  %80 = icmp eq i32 %29, 9
  %81 = select i1 %80, float 6.000000e+00, float 1.000000e+00
  br label %82

; <label>:82                                      ; preds = %79, %74, %72, %69
  %83 = phi float [ 1.000000e+00, %69 ], [ 1.000000e+00, %72 ], [ %77, %74 ], [ %81, %79 ]
  %84 = phi float [ 1.000000e+00, %69 ], [ 6.000000e+00, %72 ], [ 1.000000e+00, %74 ], [ 1.000000e+00, %79 ]
  %85 = phi float [ 6.000000e+00, %69 ], [ 1.000000e+00, %72 ], [ %78, %74 ], [ 1.000000e+00, %79 ]
  %86 = extractvalue %dx.types.CBufRet.i32 %6, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

; <label>:88                                      ; preds = %82
  %89 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 undef, i32 %4, i32 %5, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %90 = extractvalue %dx.types.ResRet.f32 %89, 0
  %91 = extractvalue %dx.types.ResRet.f32 %89, 1
  %92 = extractvalue %dx.types.ResRet.f32 %89, 2
  br label %93

; <label>:93                                      ; preds = %88, %82
  %94 = phi float [ %90, %88 ], [ 0x3FC99999A0000000, %82 ]
  %95 = phi float [ %91, %88 ], [ 0x3FC99999A0000000, %82 ]
  %96 = phi float [ %92, %88 ], [ 0x3FC99999A0000000, %82 ]
  %97 = fmul fast float %94, %83
  %98 = fmul fast float %95, %84
  %99 = fmul fast float %96, %85
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %4, i32 %5, i32 undef, float %97, float %98, float %99, float %97, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %100

; <label>:100                                     ; preds = %93, %68, %45, %42
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!12}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{null, !5, !10, null}
!5 = !{!6, !8}
!6 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 5}
!8 = !{i32 1, %"class.RWTexture2D<vector<float, 3> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!9 = !{i32 0, i32 9}
!10 = !{!11}
!11 = !{i32 0, %CB0* undef, !"", i32 0, i32 0, i32 1, i32 28, null}
!12 = !{void ()* @main, !"main", null, !4, !13}
!13 = !{i32 0, i64 8192, i32 4, !14}
!14 = !{i32 1, i32 1, i32 1}

#endif

const unsigned char g_pVRSScreenSpace_RGB2_CS[] = {
  0x44, 0x58, 0x42, 0x43, 0xe6, 0x78, 0xd6, 0x82, 0x28, 0x3b, 0x91, 0xf9,
  0xc8, 0x3a, 0x18, 0x1f, 0x17, 0x3f, 0xe1, 0xf4, 0x01, 0x00, 0x00, 0x00,
  0xec, 0x11, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x1c, 0x09, 0x00, 0x00,
  0x38, 0x09, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x90, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x5c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x53, 0x54, 0x41, 0x54, 0xa8, 0x07, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0xea, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x90, 0x07, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x84, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10, 0x71, 0xd3, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x3e, 0x72, 0xdb,
  0xa8, 0x18, 0x86, 0x61, 0x18, 0xe6, 0x08, 0x10, 0x3a, 0xee, 0x19, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x48,
  0x51, 0x8c, 0x21, 0x19, 0x86, 0x61, 0x18, 0x86, 0x81, 0x94, 0x19, 0x80,
  0xb2, 0x00, 0x43, 0x32, 0x0c, 0x03, 0xc3, 0x30, 0xcc, 0x41, 0xcd, 0x4d,
  0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9,
  0xc5, 0x6d, 0xa3, 0x82, 0x61, 0x18, 0x66, 0x28, 0xca, 0x33, 0x24, 0xc3,
  0x30, 0x0c, 0xc3, 0x30, 0x10, 0x74, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10,
  0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f, 0xdc, 0x36, 0x22, 0x86,
  0x61, 0x18, 0x0a, 0x21, 0x0d, 0xc9, 0x40, 0xd3, 0x1c, 0x41, 0x50, 0x8c,
  0x64, 0x38, 0x86, 0xa1, 0x22, 0x6b, 0x20, 0x60, 0xa6, 0x6f, 0x1c, 0xd8,
  0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16, 0x6e, 0x81, 0x16, 0xca,
  0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8,
  0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c, 0xdc, 0xa1, 0x1c, 0xc8,
  0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f, 0x50, 0x30, 0x50, 0x36,
  0x8c, 0x30, 0x30, 0x33, 0x91, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3,
  0x3c, 0xb8, 0x81, 0x2c, 0xdc, 0x02, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43,
  0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0, 0x81, 0x3d, 0x94, 0xc3,
  0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98, 0x03, 0x3b, 0xbc, 0x43,
  0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8, 0x01, 0x18, 0xf8, 0x01,
  0x0a, 0x36, 0xe2, 0x6e, 0xe0, 0x36, 0x1a, 0x1d, 0xc3, 0x30, 0x0c, 0xc3,
  0x30, 0x90, 0x37, 0x47, 0x00, 0x0a, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x14, 0x20, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x02,
  0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10,
  0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x46,
  0x00, 0x8a, 0xa1, 0x14, 0x4a, 0xa2, 0x70, 0xca, 0xa0, 0x1c, 0x0a, 0xa1,
  0x20, 0x0a, 0xa3, 0x40, 0x0a, 0xa5, 0x60, 0x4a, 0xa5, 0xa4, 0x03, 0x4a,
  0xa4, 0x34, 0xa8, 0x1a, 0x01, 0xa8, 0x01, 0x02, 0x0b, 0x10, 0x30, 0x80,
  0xba, 0x19, 0x00, 0xf2, 0x66, 0x00, 0xe8, 0x9b, 0x01, 0x20, 0x6d, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0xab, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b,
  0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99,
  0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62,
  0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73,
  0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x84, 0xe1, 0x98, 0x20, 0x0c,
  0xc8, 0x06, 0x61, 0x20, 0x26, 0x08, 0x43, 0xb2, 0x41, 0x30, 0x0c, 0x0a,
  0x63, 0x73, 0x13, 0x84, 0x41, 0xd9, 0x30, 0x20, 0x09, 0x31, 0x41, 0xd0,
  0xc0, 0x80, 0x94, 0x95, 0xd4, 0xd4, 0x14, 0x5a, 0x18, 0x59, 0x9a, 0xdb,
  0x99, 0x54, 0x18, 0x5d, 0x99, 0x50, 0x9d, 0x99, 0x59, 0x99, 0xdc, 0x04,
  0xa1, 0xd2, 0x26, 0x08, 0xc3, 0xb2, 0x41, 0x30, 0x9c, 0x0d, 0x8b, 0xb1,
  0x30, 0x86, 0x31, 0x10, 0x4d, 0xd3, 0x3c, 0x13, 0x84, 0xae, 0x23, 0x04,
  0xf5, 0x36, 0x47, 0x57, 0x64, 0x66, 0x56, 0x36, 0x46, 0x37, 0x97, 0xd4,
  0x16, 0x76, 0x56, 0x36, 0x41, 0x18, 0x98, 0x0d, 0x82, 0x31, 0x6d, 0x58,
  0x86, 0x48, 0x32, 0x86, 0x81, 0x68, 0x9a, 0x86, 0xda, 0x20, 0x40, 0xd5,
  0x04, 0xe1, 0xfb, 0x38, 0x0c, 0x09, 0xc1, 0x4c, 0x10, 0x86, 0x66, 0x03,
  0x62, 0x5c, 0x98, 0x61, 0x0c, 0x19, 0xb0, 0x21, 0xd0, 0x36, 0x10, 0x80,
  0xb5, 0x01, 0x13, 0x04, 0xcf, 0xe3, 0x34, 0x85, 0x16, 0x46, 0x96, 0xe6,
  0x76, 0x26, 0x15, 0x46, 0x57, 0x46, 0x95, 0xc6, 0x56, 0x36, 0x95, 0xa6,
  0x57, 0x36, 0x41, 0x18, 0x9c, 0x09, 0xc2, 0xf0, 0x4c, 0x10, 0xaa, 0x6d,
  0x03, 0x92, 0x78, 0x9f, 0x01, 0x06, 0xce, 0x14, 0x06, 0x4c, 0x84, 0xd8,
  0xca, 0xdc, 0xc8, 0x9a, 0xc2, 0xe6, 0xd6, 0x26, 0x08, 0x03, 0xb4, 0x01,
  0x49, 0xc6, 0xe0, 0x23, 0x03, 0x30, 0x18, 0xa6, 0x30, 0x20, 0x42, 0x24,
  0x17, 0x76, 0x77, 0x24, 0x97, 0x46, 0x36, 0x41, 0x18, 0xa2, 0x0d, 0x48,
  0x62, 0x06, 0xdf, 0x19, 0x80, 0xc1, 0x30, 0x85, 0x01, 0x17, 0xa7, 0x30,
  0xba, 0x34, 0xbb, 0xb2, 0xab, 0x34, 0x32, 0x3a, 0xb4, 0x09, 0xc2, 0x20,
  0x6d, 0x40, 0x92, 0x34, 0xf8, 0xd4, 0x00, 0x0c, 0x9c, 0x29, 0x0c, 0xc8,
  0x38, 0x85, 0xd1, 0xa5, 0xd9, 0x95, 0x21, 0x95, 0xa5, 0x9d, 0xa1, 0xd1,
  0x4d, 0x10, 0x86, 0x69, 0x03, 0x92, 0xb0, 0xc1, 0xd7, 0x06, 0x60, 0xe0,
  0x4c, 0x61, 0xc0, 0xa6, 0x0a, 0x6e, 0x6e, 0x2c, 0x8c, 0xad, 0x8c, 0xec,
  0x2a, 0x8d, 0x8c, 0x0e, 0x6d, 0x82, 0x30, 0x50, 0x1b, 0x90, 0xe4, 0x0d,
  0x3e, 0x38, 0x00, 0x03, 0x67, 0x0a, 0x03, 0x3a, 0x55, 0x70, 0x73, 0x63,
  0x61, 0x6c, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x13, 0x84,
  0xa1, 0xda, 0x80, 0x24, 0x72, 0xf0, 0xcd, 0x01, 0x18, 0x38, 0x53, 0x18,
  0x6c, 0x40, 0x32, 0x31, 0x28, 0x03, 0x34, 0x58, 0x03, 0x37, 0x88, 0x03,
  0x3a, 0xd8, 0x30, 0x18, 0x5d, 0x1d, 0x4c, 0x10, 0x04, 0x60, 0x03, 0xb0,
  0x61, 0x30, 0xf0, 0x00, 0x0f, 0x36, 0x04, 0x79, 0xb0, 0x61, 0x18, 0xee,
  0x40, 0x0f, 0x48, 0xb4, 0x85, 0xa5, 0xb9, 0x4d, 0x10, 0xc0, 0x80, 0xdb,
  0x30, 0x0c, 0xc3, 0xb0, 0x81, 0x30, 0xfa, 0x80, 0x0c, 0xfc, 0x60, 0x43,
  0x71, 0x07, 0x7c, 0x00, 0x70, 0x7f, 0x40, 0x44, 0x4c, 0x2e, 0xcc, 0x6d,
  0x0c, 0xad, 0x6c, 0x8e, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0xdd, 0xdc, 0x04,
  0x61, 0xb0, 0x58, 0xa4, 0xb9, 0xcd, 0xd1, 0xcd, 0x4d, 0x10, 0x86, 0x8b,
  0x44, 0x9a, 0x1b, 0xdd, 0xdc, 0x04, 0x61, 0xc0, 0x88, 0xd0, 0x95, 0xe1,
  0x7d, 0xb1, 0xbd, 0x85, 0x91, 0x31, 0xa1, 0x2b, 0xc3, 0xfb, 0x9a, 0xa3,
  0x7b, 0x93, 0x2b, 0x63, 0x51, 0x97, 0xe6, 0x46, 0x37, 0x37, 0x41, 0x18,
  0xb2, 0x0d, 0x4e, 0x28, 0x9c, 0x81, 0x28, 0x8c, 0x02, 0x29, 0x94, 0x82,
  0x29, 0x9c, 0x02, 0x2a, 0x7c, 0xa9, 0x40, 0x06, 0xaa, 0xb0, 0x0a, 0x55,
  0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04,
  0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7,
  0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c,
  0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b,
  0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12, 0x24, 0x65, 0xc8, 0xf0,
  0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04,
  0x5b, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7,
  0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x42, 0x1d, 0xe8,
  0x41, 0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7,
  0x34, 0x37, 0xba, 0xb9, 0x29, 0xc1, 0x1f, 0x74, 0x21, 0xc3, 0x73, 0x19,
  0x7b, 0xab, 0x73, 0xa3, 0x2b, 0x93, 0x9b, 0x9b, 0x12, 0xac, 0x02, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x56, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x23, 0xb7, 0x6d, 0x06, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01,
  0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x18, 0x41, 0x35, 0x5c, 0xbe, 0xf3,
  0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8, 0xc5, 0x6d,
  0x9b, 0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44,
  0x94, 0x0e, 0x30, 0xf8, 0xc8, 0x6d, 0xdb, 0x80, 0x35, 0x5c, 0xbe, 0xf3,
  0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0xb0, 0x93, 0x13, 0x11, 0x7e, 0x71,
  0xdb, 0x16, 0x20, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30,
  0x88, 0x83, 0x8f, 0xdc, 0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x87, 0x46, 0x9e, 0xea, 0xef, 0x53, 0x37, 0x20,
  0x92, 0x5d, 0x7a, 0x17, 0xbc, 0xbf, 0xdc, 0x08, 0x44, 0x58, 0x49, 0x4c,
  0xac, 0x08, 0x00, 0x00, 0x62, 0x00, 0x05, 0x00, 0x2b, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x94, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x22, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x88, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10,
  0x71, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a,
  0x4c, 0x3e, 0x72, 0xdb, 0xa8, 0x18, 0x86, 0x61, 0x18, 0xe6, 0x08, 0x10,
  0x3a, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19,
  0x16, 0x02, 0x05, 0x48, 0x51, 0x8c, 0x21, 0x19, 0x86, 0x61, 0x18, 0x86,
  0x81, 0x94, 0x19, 0x80, 0xb2, 0x00, 0x43, 0x32, 0x0c, 0x03, 0xc3, 0x30,
  0xcc, 0x41, 0xcd, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a,
  0x48, 0x2b, 0x31, 0xf9, 0xc5, 0x6d, 0xa3, 0x82, 0x61, 0x18, 0x66, 0x28,
  0xca, 0x33, 0x24, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x10, 0x74, 0xd4, 0x70,
  0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f,
  0xdc, 0x36, 0x22, 0x86, 0x61, 0x18, 0x0a, 0x21, 0x0d, 0xc9, 0x40, 0xd3,
  0x1c, 0x41, 0x50, 0x8c, 0x64, 0x38, 0x86, 0xa1, 0x22, 0x6b, 0x20, 0x60,
  0xa6, 0x6f, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc, 0x40, 0x16,
  0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4, 0xa1, 0x1c,
  0xe4, 0x80, 0x14, 0xf8, 0xa0, 0x1e, 0xdc, 0x61, 0x1e, 0xd2, 0xe1, 0x1c,
  0xdc, 0xa1, 0x1c, 0xc8, 0x01, 0x0c, 0xd2, 0xc1, 0x1d, 0xe8, 0xc1, 0x0f,
  0x50, 0x30, 0x50, 0x36, 0x8c, 0x30, 0x30, 0x33, 0x91, 0xc1, 0x38, 0xb0,
  0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x81, 0x2c, 0xdc, 0x02, 0x2d, 0x94,
  0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0,
  0x81, 0x3d, 0x94, 0xc3, 0x38, 0xd0, 0xc3, 0x3b, 0xc8, 0x03, 0x1f, 0x98,
  0x03, 0x3b, 0xbc, 0x43, 0x38, 0xd0, 0x03, 0x1b, 0x80, 0xc1, 0x1c, 0xf8,
  0x01, 0x18, 0xf8, 0x01, 0x0a, 0x36, 0xe2, 0x6e, 0xe0, 0x36, 0x1a, 0x1d,
  0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x90, 0x37, 0x47, 0x00, 0x0a, 0x53, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x14, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x02, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10, 0x0c, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x08, 0x8a, 0x61, 0x04, 0xa0, 0x14,
  0x4a, 0xa2, 0x70, 0x0a, 0x81, 0xaa, 0x11, 0x00, 0x02, 0x0b, 0x10, 0x30,
  0x80, 0xba, 0x19, 0x00, 0xfa, 0x66, 0x00, 0x48, 0x9b, 0x01, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0xe1, 0x98, 0x20, 0x0c, 0xc8, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x43, 0xb2, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0x83, 0x32, 0x41, 0xd0, 0x26, 0x02, 0x13, 0x84,
  0xea, 0x99, 0x20, 0x0c, 0xcb, 0x06, 0x41, 0x71, 0x36, 0x2c, 0xca, 0xc2,
  0x28, 0xca, 0x40, 0x34, 0x4d, 0xf3, 0x4c, 0x10, 0xba, 0x68, 0x82, 0x30,
  0x30, 0x1b, 0x04, 0x45, 0xda, 0xb0, 0x0c, 0x11, 0xa3, 0x0c, 0x03, 0xd1,
  0x34, 0xcd, 0xb4, 0x41, 0x80, 0xa8, 0x09, 0xc2, 0x27, 0x4d, 0x10, 0x86,
  0x66, 0x03, 0xa2, 0x58, 0x8c, 0xa2, 0x0c, 0x17, 0xb0, 0x21, 0xc0, 0x36,
  0x10, 0x40, 0x95, 0x01, 0x13, 0x04, 0x01, 0x20, 0xd1, 0x16, 0x96, 0xe6,
  0x36, 0x41, 0x00, 0x03, 0x68, 0x82, 0x30, 0x38, 0x1b, 0x86, 0x61, 0x18,
  0x36, 0x10, 0x4a, 0xe7, 0x7d, 0x1b, 0x8a, 0x8d, 0x03, 0x34, 0x30, 0xa8,
  0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46, 0x37, 0x25,
  0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9,
  0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65,
  0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59,
  0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x00, 0x29, 0x43, 0x86,
  0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36, 0x37, 0x25,
  0xc8, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd,
  0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0xc0, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x56, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7, 0x6d, 0x06,
  0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34,
  0xc3, 0x42, 0x18, 0x41, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d,
  0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c,
  0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d, 0x54, 0x44, 0x94, 0x0e, 0x30, 0xf8,
  0xc8, 0x6d, 0xdb, 0x80, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x71, 0x4d,
  0x54, 0x44, 0xb0, 0x93, 0x13, 0x11, 0x7e, 0x71, 0xdb, 0x16, 0x20, 0x0d,
  0x97, 0xef, 0x3c, 0xfe, 0x74, 0x44, 0x04, 0x30, 0x88, 0x83, 0x8f, 0xdc,
  0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xaa, 0x00, 0x00, 0x00, 0x13, 0x04, 0x50, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x34, 0xcc, 0x00, 0x94, 0x61, 0x40, 0xc9, 0x15,
  0x61, 0x40, 0xe9, 0x06, 0x94, 0x5d, 0x19, 0xd4, 0x41, 0x51, 0xd0, 0x51,
  0x1e, 0x25, 0x50, 0x04, 0x54, 0xd5, 0x00, 0x31, 0x23, 0x00, 0x63, 0x04,
  0x20, 0x08, 0x82, 0x2c, 0x18, 0x8c, 0x11, 0xb4, 0xe6, 0x9c, 0x93, 0xdf,
  0x18, 0x01, 0x08, 0x82, 0x20, 0x09, 0x06, 0x63, 0x04, 0x20, 0x08, 0x82,
  0xf8, 0x07, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x81,
  0x01, 0x84, 0x7c, 0xdf, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x56,
  0x18, 0x44, 0x49, 0xd7, 0x61, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0x89, 0x81, 0x94, 0x78, 0x5e, 0x36, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x04, 0x1a, 0x44, 0xdf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x10, 0x69,
  0x20, 0x8d, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0x66, 0x20,
  0x0d, 0x61, 0x30, 0x9a, 0x10, 0x0c, 0x17, 0x30, 0x35, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x53, 0x1a, 0x54, 0xc6, 0x19, 0x8c, 0x26, 0x04, 0xc1,
  0x05, 0x4c, 0x19, 0x11, 0xd0, 0x67, 0x34, 0x81, 0x00, 0x2e, 0x60, 0x6a,
  0x34, 0xc1, 0x10, 0x2e, 0x60, 0xca, 0x86, 0x80, 0x3e, 0xe7, 0x30, 0x65,
  0x47, 0x20, 0x9f, 0x7b, 0x98, 0x32, 0x22, 0x90, 0xcf, 0x68, 0x02, 0x04,
  0x5c, 0xc0, 0x94, 0x15, 0x01, 0x7d, 0x2e, 0x18, 0xc6, 0x8a, 0x81, 0x3e,
  0x17, 0x0c, 0x33, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0xca, 0x1f, 0xa8,
  0x81, 0xd6, 0x06, 0x43, 0xd0, 0x06, 0x6d, 0xd0, 0x06, 0x6d, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x98, 0x30, 0xdc, 0x10, 0xe8, 0x41, 0x18, 0x5c,
  0x33, 0x4c, 0x05, 0x4b, 0x0d, 0x37, 0x04, 0x7d, 0x00, 0x06, 0xb3, 0x0c,
  0x42, 0x10, 0x9c, 0x33, 0x4c, 0x05, 0x4e, 0x0d, 0x37, 0x04, 0xa0, 0x00,
  0x06, 0xb3, 0x04, 0xc2, 0x40, 0x45, 0x65, 0x0b, 0x80, 0x10, 0x14, 0x12,
  0xe8, 0x2c, 0xc3, 0x40, 0x04, 0x23, 0x06, 0x0e, 0x00, 0x82, 0x60, 0xd0,
  0xa8, 0x02, 0x1e, 0x9c, 0x01, 0x19, 0x8c, 0x41, 0x1e, 0xb0, 0x01, 0x1b,
  0xb0, 0x01, 0x1b, 0xc0, 0xc1, 0x2c, 0xc1, 0x33, 0xdc, 0xb0, 0x8c, 0x02,
  0x18, 0xcc, 0x32, 0x14, 0x46, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06,
  0x90, 0x2a, 0xdc, 0x01, 0x1a, 0xe8, 0x41, 0x19, 0x90, 0x81, 0x1e, 0xe8,
  0x81, 0x1e, 0xe8, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x41, 0xf3, 0x0a, 0x7d,
  0xc0, 0x06, 0x69, 0x80, 0x06, 0x7e, 0x30, 0x08, 0xc1, 0x50, 0x07, 0xb3,
  0x04, 0xcf, 0x70, 0x03, 0xb4, 0x0a, 0x60, 0x30, 0xdc, 0x10, 0xa9, 0x02,
  0x18, 0x94, 0x10, 0xec, 0x6d, 0xc3, 0x0c, 0x37, 0x40, 0xa8, 0x00, 0x06,
  0x25, 0x70, 0x35, 0xdc, 0x10, 0xa8, 0x02, 0x18, 0x0c, 0x37, 0x08, 0x7f,
  0x00, 0x06, 0x35, 0xfc, 0x01, 0x0c, 0x37, 0x04, 0xb3, 0x40, 0x06, 0x65,
  0x04, 0x3a, 0xdc, 0x70, 0x8d, 0x02, 0x18, 0x54, 0x60, 0x68, 0x0d, 0xc1,
  0xd6, 0x70, 0x68, 0x09, 0xc1, 0x96, 0x13, 0xe8, 0x2c, 0xc3, 0x81, 0x04,
  0x23, 0x06, 0x0e, 0x00, 0x82, 0x60, 0xd0, 0x80, 0x83, 0x2b, 0xf4, 0x81,
  0x1e, 0xe4, 0xc1, 0x2b, 0xf8, 0x81, 0x1f, 0xf8, 0x81, 0x1f, 0x98, 0xc2,
  0x2c, 0xc1, 0x33, 0xdc, 0x10, 0x06, 0xb5, 0x00, 0x06, 0x25, 0x05, 0x3b,
  0xcb, 0xc0, 0x24, 0xc1, 0x70, 0xc3, 0x18, 0xe8, 0x02, 0x18, 0xcc, 0x32,
  0x30, 0x4a, 0x30, 0xdc, 0x40, 0x06, 0xaa, 0x00, 0x06, 0x15, 0x50, 0x3b,
  0xdd, 0x40, 0x0a, 0xa6, 0x20, 0x4c, 0x37, 0x94, 0x02, 0x29, 0x0c, 0xb3,
  0x0c, 0xcc, 0x32, 0x0c, 0x37, 0xa0, 0x81, 0x2f, 0x80, 0xc1, 0x74, 0x43,
  0x2a, 0x98, 0x42, 0x30, 0x4b, 0xc0, 0x0c, 0x94, 0x30, 0x2e, 0x81, 0xb8,
  0x44, 0x82, 0x28, 0xc2, 0x32, 0x50, 0xc2, 0xc0, 0x04, 0x62, 0x13, 0x09,
  0x4c, 0x28, 0x30, 0xb1, 0x0c, 0x94, 0x30, 0x38, 0x81, 0xc8, 0x44, 0xa2,
  0x28, 0x32, 0xb1, 0x8c, 0x26, 0x90, 0x42, 0x30, 0xdc, 0x10, 0x98, 0x03,
  0x18, 0xcc, 0x32, 0x38, 0x4d, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06,
  0x50, 0x3b, 0xe8, 0xc2, 0x2a, 0xf4, 0x02, 0x2a, 0x9c, 0x42, 0x2f, 0xf4,
  0x42, 0x2f, 0xf4, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0xcc, 0x12, 0x38, 0x03, 0x15, 0x8c, 0xd1, 0x90, 0x05, 0x33,
  0x50, 0xc1, 0x18, 0x8d, 0x59, 0x30, 0x03, 0x15, 0x8c, 0xd1, 0xa0, 0x05,
  0x63, 0x03, 0x23, 0x1f, 0x1b, 0x18, 0xf9, 0xd8, 0xc0, 0xc8, 0x67, 0xc4,
  0xc0, 0x01, 0x40, 0x10, 0x0c, 0x1a, 0x7c, 0x30, 0x87, 0x5a, 0x90, 0x85,
  0x58, 0x38, 0x87, 0x41, 0x08, 0x06, 0x5f, 0x98, 0x25, 0x78, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00
};
