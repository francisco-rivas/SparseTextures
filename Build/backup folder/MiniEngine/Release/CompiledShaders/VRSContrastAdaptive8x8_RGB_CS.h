#if 0
;
; Note: shader requires additional functionality:
;       Typed UAV Load Additional Formats
;       Wave level operations
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: a9e06f79c4a4adccf0e31e64579b00a1
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer CB0
; {
;
;   struct CB0
;   {
;
;       uint2 TextureSize;                            ; Offset:    0
;       uint ShadingRateTileSize;                     ; Offset:    8
;       float SensitivityThreshold;                   ; Offset:   12
;       float EnvLuma;                                ; Offset:   16
;       float K;                                      ; Offset:   20
;       float WeberFechnerConstant;                   ; Offset:   24
;       bool UseWeberFechner;                         ; Offset:   28
;       bool UseMotionVectors;                        ; Offset:   32
;       bool AllowQuarterRate;                        ; Offset:   36
;       uint NativeWidth;                             ; Offset:   40
;       uint NativeHeight;                            ; Offset:   44
;       uint UpscaledWidth;                           ; Offset:   48
;       uint UpscaledHeight;                          ; Offset:   52
;       bool UseUpscaledMotionVectors;                ; Offset:   56
;   
;   } CB0;                                            ; Offset:    0 Size:    60
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; CB0                               cbuffer      NA          NA     CB0            cb0     1
; VRSShadingRateBuffer                  UAV     u32          2d      U0             u0     1
; PostEffectsImage                      UAV     u32          2d      U1             u1     1
; VelocityBuffer                        UAV     u32          2d      U2             u2     1
; UpscaledVelocityBuffer                UAV     f32          2d      U3             u3     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.RWTexture2D<unsigned int>" = type { i32 }
%"class.RWTexture2D<vector<float, 2> >" = type { <2 x float> }
%CB0 = type { <2 x i32>, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32 }

@"\01?waveVelocityMin@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSum@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSumX@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?waveLumaSumY@@3PAMA" = external addrspace(3) global [64 x float], align 4
@"\01?neighborhood@@3PAY07$$CAMA.1dim" = addrspace(3) global [64 x float] undef, align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call i32 @dx.op.groupId.i32(i32 94, i32 0)  ; GroupId(component)
  %7 = call i32 @dx.op.groupId.i32(i32 94, i32 1)  ; GroupId(component)
  %8 = call i32 @dx.op.flattenedThreadIdInGroup.i32(i32 96)  ; FlattenedThreadIdInGroup()
  %9 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %10 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %11 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %12 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %13 = call i32 @dx.op.waveGetLaneCount(i32 112)  ; WaveGetLaneCount()
  %14 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %3, i32 undef, i32 %11, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %15 = extractvalue %dx.types.ResRet.i32 %14, 0
  %16 = shl i32 %15, 4
  %17 = and i32 %16, 32752
  %18 = call float @dx.op.legacyF16ToF32(i32 131, i32 %17)  ; LegacyF16ToF32(value)
  %19 = lshr i32 %15, 7
  %20 = and i32 %19, 32752
  %21 = call float @dx.op.legacyF16ToF32(i32 131, i32 %20)  ; LegacyF16ToF32(value)
  %22 = lshr i32 %15, 17
  %23 = and i32 %22, 32736
  %24 = call float @dx.op.legacyF16ToF32(i32 131, i32 %23)  ; LegacyF16ToF32(value)
  %25 = add i32 %11, -1
  %26 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %3, i32 undef, i32 %25, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %27 = extractvalue %dx.types.ResRet.i32 %26, 0
  %28 = shl i32 %27, 4
  %29 = and i32 %28, 32752
  %30 = call float @dx.op.legacyF16ToF32(i32 131, i32 %29)  ; LegacyF16ToF32(value)
  %31 = lshr i32 %27, 7
  %32 = and i32 %31, 32752
  %33 = call float @dx.op.legacyF16ToF32(i32 131, i32 %32)  ; LegacyF16ToF32(value)
  %34 = lshr i32 %27, 17
  %35 = and i32 %34, 32736
  %36 = call float @dx.op.legacyF16ToF32(i32 131, i32 %35)  ; LegacyF16ToF32(value)
  %37 = add i32 %12, -1
  %38 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %3, i32 undef, i32 %11, i32 %37, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %39 = extractvalue %dx.types.ResRet.i32 %38, 0
  %40 = shl i32 %39, 4
  %41 = and i32 %40, 32752
  %42 = call float @dx.op.legacyF16ToF32(i32 131, i32 %41)  ; LegacyF16ToF32(value)
  %43 = lshr i32 %39, 7
  %44 = and i32 %43, 32752
  %45 = call float @dx.op.legacyF16ToF32(i32 131, i32 %44)  ; LegacyF16ToF32(value)
  %46 = lshr i32 %39, 17
  %47 = and i32 %46, 32736
  %48 = call float @dx.op.legacyF16ToF32(i32 131, i32 %47)  ; LegacyF16ToF32(value)
  %49 = fmul fast float %18, %18
  %50 = fmul fast float %21, %21
  %51 = fmul fast float %24, %24
  %52 = call float @dx.op.dot3.f32(i32 55, float %49, float %50, float %51, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %53 = fmul fast float %30, %30
  %54 = fmul fast float %33, %33
  %55 = fmul fast float %36, %36
  %56 = call float @dx.op.dot3.f32(i32 55, float %53, float %54, float %55, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %57 = fmul fast float %42, %42
  %58 = fmul fast float %45, %45
  %59 = fmul fast float %48, %48
  %60 = call float @dx.op.dot3.f32(i32 55, float %57, float %58, float %59, float 0x3FCB38CDA0000000, float 0x3FE6E29740000000, float 0x3FB279AAE0000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %61 = call float @dx.op.waveActiveOp.f32(i32 119, float %52, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %62 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %63 = extractvalue %dx.types.CBufRet.i32 %62, 3
  %64 = icmp eq i32 %63, 0
  %65 = fsub fast float %52, %56
  %66 = call float @dx.op.unary.f32(i32 6, float %65)  ; FAbs(value)
  %67 = fsub fast float %52, %60
  %68 = call float @dx.op.unary.f32(i32 6, float %67)  ; FAbs(value)
  br i1 %64, label %128, label %69

; <label>:69                                      ; preds = %0
  %70 = mul i32 %9, 8
  %71 = add i32 %10, %70
  %72 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %71
  store float %52, float addrspace(3)* %72, align 4, !tbaa !17
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %73 = add nsw i32 %9, 1
  %74 = add nsw i32 %9, -1
  %75 = add nsw i32 %10, 1
  %76 = add nsw i32 %10, -1
  %77 = mul i32 %9, 8
  %78 = add i32 %76, %77
  %79 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %78
  %80 = load float, float addrspace(3)* %79, align 4, !tbaa !17
  %81 = mul i32 %73, 8
  %82 = add i32 %76, %81
  %83 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %82
  %84 = load float, float addrspace(3)* %83, align 4, !tbaa !17
  %85 = mul i32 %73, 8
  %86 = add i32 %10, %85
  %87 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %86
  %88 = load float, float addrspace(3)* %87, align 4, !tbaa !17
  %89 = mul i32 %73, 8
  %90 = add i32 %75, %89
  %91 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %90
  %92 = load float, float addrspace(3)* %91, align 4, !tbaa !17
  %93 = mul i32 %9, 8
  %94 = add i32 %75, %93
  %95 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %94
  %96 = load float, float addrspace(3)* %95, align 4, !tbaa !17
  %97 = mul i32 %74, 8
  %98 = add i32 %75, %97
  %99 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %98
  %100 = load float, float addrspace(3)* %99, align 4, !tbaa !17
  %101 = mul i32 %74, 8
  %102 = add i32 %76, %101
  %103 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?neighborhood@@3PAY07$$CAMA.1dim", i32 0, i32 %102
  %104 = load float, float addrspace(3)* %103, align 4, !tbaa !17
  %105 = call float @dx.op.binary.f32(i32 36, float 1.000000e+04, float %80)  ; FMin(a,b)
  %106 = call float @dx.op.binary.f32(i32 36, float %105, float %84)  ; FMin(a,b)
  %107 = call float @dx.op.binary.f32(i32 36, float %106, float %88)  ; FMin(a,b)
  %108 = call float @dx.op.binary.f32(i32 36, float %107, float %92)  ; FMin(a,b)
  %109 = call float @dx.op.binary.f32(i32 36, float %108, float %96)  ; FMin(a,b)
  %110 = call float @dx.op.binary.f32(i32 36, float %109, float %100)  ; FMin(a,b)
  %111 = call float @dx.op.binary.f32(i32 36, float %110, float %96)  ; FMin(a,b)
  %112 = call float @dx.op.binary.f32(i32 36, float %111, float %104)  ; FMin(a,b)
  %113 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %114 = extractvalue %dx.types.CBufRet.f32 %113, 2
  %115 = fmul fast float %112, 5.000000e+01
  %116 = fadd fast float %115, -2.500000e+00
  %117 = call float @dx.op.unary.f32(i32 7, float %116)  ; Saturate(value)
  %118 = fsub fast float 1.000000e+00, %117
  %119 = fmul fast float %118, %114
  %120 = call float @dx.op.binary.f32(i32 36, float %52, float %56)  ; FMin(a,b)
  %121 = fadd fast float %120, %119
  %122 = fdiv fast float %66, %121
  %123 = call float @dx.op.waveActiveOp.f32(i32 119, float %122, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %124 = call float @dx.op.binary.f32(i32 36, float %52, float %60)  ; FMin(a,b)
  %125 = fadd fast float %124, %119
  %126 = fdiv fast float %68, %125
  %127 = call float @dx.op.waveActiveOp.f32(i32 119, float %126, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %133

; <label>:128                                     ; preds = %0
  %129 = fmul fast float %66, 5.000000e-01
  %130 = call float @dx.op.waveActiveOp.f32(i32 119, float %129, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  %131 = fmul fast float %68, 5.000000e-01
  %132 = call float @dx.op.waveActiveOp.f32(i32 119, float %131, i8 0, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %133

; <label>:133                                     ; preds = %128, %69
  %134 = phi float [ %123, %69 ], [ %130, %128 ]
  %135 = phi float [ %127, %69 ], [ %132, %128 ]
  %136 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %137 = extractvalue %dx.types.CBufRet.i32 %136, 0
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %199, label %139

; <label>:139                                     ; preds = %133
  %140 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %141 = extractvalue %dx.types.CBufRet.i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %168, label %143

; <label>:143                                     ; preds = %139
  %144 = extractvalue %dx.types.CBufRet.i32 %140, 0
  %145 = uitofp i32 %144 to float
  %146 = extractvalue %dx.types.CBufRet.i32 %136, 2
  %147 = uitofp i32 %146 to float
  %148 = fdiv fast float %145, %147
  %149 = extractvalue %dx.types.CBufRet.i32 %140, 1
  %150 = uitofp i32 %149 to float
  %151 = extractvalue %dx.types.CBufRet.i32 %136, 3
  %152 = uitofp i32 %151 to float
  %153 = fdiv fast float %150, %152
  %154 = uitofp i32 %11 to float
  %155 = fmul fast float %148, %154
  %156 = uitofp i32 %12 to float
  %157 = fmul fast float %153, %156
  %158 = fptoui float %155 to i32
  %159 = fptoui float %157 to i32
  %160 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %1, i32 undef, i32 %158, i32 %159, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %161 = extractvalue %dx.types.ResRet.f32 %160, 0
  %162 = extractvalue %dx.types.ResRet.f32 %160, 1
  %163 = fmul fast float %161, %161
  %164 = fmul fast float %162, %162
  %165 = fadd fast float %163, %164
  %166 = call float @dx.op.unary.f32(i32 24, float %165)  ; Sqrt(value)
  %167 = call float @dx.op.waveActiveOp.f32(i32 119, float %166, i8 2, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %199

; <label>:168                                     ; preds = %139
  %169 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %2, i32 undef, i32 %11, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %170 = extractvalue %dx.types.ResRet.i32 %169, 0
  %171 = shl i32 %170, 4
  %172 = and i32 %171, 8176
  %173 = shl i32 %170, 6
  %174 = and i32 %173, 32768
  %175 = or i32 %172, %174
  %176 = call float @dx.op.legacyF16ToF32(i32 131, i32 %175)  ; LegacyF16ToF32(value)
  %177 = fmul fast float %176, 3.276800e+04
  %178 = lshr i32 %170, 6
  %179 = and i32 %178, 8176
  %180 = lshr i32 %170, 4
  %181 = and i32 %180, 32768
  %182 = or i32 %179, %181
  %183 = call float @dx.op.legacyF16ToF32(i32 131, i32 %182)  ; LegacyF16ToF32(value)
  %184 = fmul fast float %183, 3.276800e+04
  %185 = lshr i32 %170, 18
  %186 = and i32 %185, 8188
  %187 = lshr i32 %170, 31
  %188 = shl nuw nsw i32 %187, 15
  %189 = or i32 %186, %188
  %190 = call float @dx.op.legacyF16ToF32(i32 131, i32 %189)  ; LegacyF16ToF32(value)
  %191 = fmul fast float %190, 1.280000e+02
  %192 = fmul fast float %177, %177
  %193 = fmul fast float %184, %184
  %194 = fadd fast float %193, %192
  %195 = fmul fast float %191, %191
  %196 = fadd fast float %194, %195
  %197 = call float @dx.op.unary.f32(i32 24, float %196)  ; Sqrt(value)
  %198 = call float @dx.op.waveActiveOp.f32(i32 119, float %197, i8 2, i8 0)  ; WaveActiveOp(value,op,sop)
  br label %199

; <label>:199                                     ; preds = %168, %143, %133
  %200 = phi float [ %167, %143 ], [ %198, %168 ], [ 0.000000e+00, %133 ]
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %201 = call i1 @dx.op.waveIsFirstLane(i32 110)  ; WaveIsFirstLane()
  br i1 %201, label %202, label %208

; <label>:202                                     ; preds = %199
  %203 = udiv i32 %8, %13
  %204 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSum@@3PAMA", i32 0, i32 %203
  store float %61, float addrspace(3)* %204, align 4, !tbaa !17
  %205 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumX@@3PAMA", i32 0, i32 %203
  store float %134, float addrspace(3)* %205, align 4, !tbaa !17
  %206 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumY@@3PAMA", i32 0, i32 %203
  store float %135, float addrspace(3)* %206, align 4, !tbaa !17
  %207 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveVelocityMin@@3PAMA", i32 0, i32 %203
  store float %200, float addrspace(3)* %207, align 4, !tbaa !17
  br label %208

; <label>:208                                     ; preds = %202, %199
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %209 = icmp eq i32 %8, 0
  br i1 %209, label %210, label %304

; <label>:210                                     ; preds = %208
  %211 = sdiv i32 64, %13
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %238

; <label>:213                                     ; preds = %210
  br label %214

; <label>:214                                     ; preds = %214, %213
  %215 = phi float [ %222, %214 ], [ 0.000000e+00, %213 ]
  %216 = phi float [ %225, %214 ], [ 0.000000e+00, %213 ]
  %217 = phi float [ %228, %214 ], [ 0.000000e+00, %213 ]
  %218 = phi float [ %231, %214 ], [ 1.000000e+04, %213 ]
  %219 = phi i32 [ %232, %214 ], [ 0, %213 ]
  %220 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSum@@3PAMA", i32 0, i32 %219
  %221 = load float, float addrspace(3)* %220, align 4, !tbaa !17
  %222 = fadd fast float %221, %215
  %223 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumX@@3PAMA", i32 0, i32 %219
  %224 = load float, float addrspace(3)* %223, align 4, !tbaa !17
  %225 = fadd fast float %224, %216
  %226 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveLumaSumY@@3PAMA", i32 0, i32 %219
  %227 = load float, float addrspace(3)* %226, align 4, !tbaa !17
  %228 = fadd fast float %227, %217
  %229 = getelementptr [64 x float], [64 x float] addrspace(3)* @"\01?waveVelocityMin@@3PAMA", i32 0, i32 %219
  %230 = load float, float addrspace(3)* %229, align 4, !tbaa !17
  %231 = call float @dx.op.binary.f32(i32 36, float %218, float %230)  ; FMin(a,b)
  %232 = add nuw nsw i32 %219, 1
  %233 = icmp slt i32 %232, %211
  br i1 %233, label %214, label %234

; <label>:234                                     ; preds = %214
  %235 = fmul float %222, 1.562500e-02
  %236 = fmul float %225, 1.562500e-02
  %237 = fmul float %228, 1.562500e-02
  br label %238

; <label>:238                                     ; preds = %234, %210
  %239 = phi float [ 0.000000e+00, %210 ], [ %235, %234 ]
  %240 = phi float [ 0.000000e+00, %210 ], [ %236, %234 ]
  %241 = phi float [ 0.000000e+00, %210 ], [ %237, %234 ]
  %242 = phi float [ 1.000000e+04, %210 ], [ %231, %234 ]
  %243 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %244 = extractvalue %dx.types.CBufRet.f32 %243, 3
  %245 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %246 = extractvalue %dx.types.CBufRet.f32 %245, 0
  %247 = fadd fast float %246, %239
  %248 = fmul fast float %247, %244
  %249 = call float @dx.op.unary.f32(i32 24, float %240)  ; Sqrt(value)
  %250 = call float @dx.op.unary.f32(i32 24, float %241)  ; Sqrt(value)
  %251 = call float @dx.op.tertiary.f32(i32 46, float 0xBFAE809D40000000, float %242, float 1.000000e+00)  ; FMad(a,b,c)
  %252 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %253 = extractvalue %dx.types.CBufRet.i32 %252, 0
  %254 = icmp ne i32 %253, 0
  %255 = uitofp i1 %254 to float
  %256 = fmul fast float %255, %251
  %257 = icmp eq i32 %253, 0
  %258 = uitofp i1 %257 to float
  %259 = fadd fast float %258, %256
  %260 = extractvalue %dx.types.CBufRet.f32 %245, 1
  %261 = fsub fast float 0x3FC4D9E840000000, %260
  %262 = fmul fast float %261, 6.250000e-02
  %263 = call float @dx.op.tertiary.f32(i32 46, float %262, float %242, float %260)  ; FMad(a,b,c)
  %264 = fmul fast float %255, %263
  %265 = call float @dx.op.tertiary.f32(i32 46, float %260, float %258, float %264)  ; FMad(a,b,c)
  %266 = fmul fast float %259, %249
  %267 = fcmp fast oge float %266, %248
  %268 = fmul fast float %265, %249
  %269 = fcmp fast olt float %268, %248
  %270 = fmul fast float %259, %250
  %271 = fcmp fast oge float %270, %248
  %272 = fmul fast float %265, %250
  %273 = fcmp fast olt float %272, %248
  %274 = extractvalue %dx.types.CBufRet.i32 %252, 1
  %275 = icmp ne i32 %274, 0
  %276 = zext i1 %275 to i32
  %277 = shl nuw nsw i32 %276, 1
  %278 = icmp eq i32 %274, 0
  %279 = zext i1 %278 to i32
  %280 = or i32 %279, %277
  %281 = select i1 %269, i32 %280, i32 0
  %282 = or i1 %267, %269
  %283 = zext i1 %282 to i32
  %284 = xor i32 %283, 1
  %285 = add nuw nsw i32 %281, %284
  %286 = select i1 %273, i32 %280, i32 0
  %287 = or i1 %271, %273
  %288 = zext i1 %287 to i32
  %289 = xor i32 %288, 1
  %290 = add nuw nsw i32 %286, %289
  %291 = icmp eq i32 %290, 0
  %292 = icmp eq i32 %285, 2
  %293 = and i1 %291, %292
  br i1 %293, label %300, label %294

; <label>:294                                     ; preds = %238
  %295 = icmp eq i32 %290, 2
  %296 = icmp eq i32 %285, 0
  %297 = and i1 %295, %296
  %298 = select i1 %297, i32 1, i32 %290
  %299 = shl nuw nsw i32 %285, 2
  br label %300

; <label>:300                                     ; preds = %294, %238
  %301 = phi i32 [ 4, %238 ], [ %299, %294 ]
  %302 = phi i32 [ 0, %238 ], [ %298, %294 ]
  %303 = or i32 %302, %301
  call void @dx.op.textureStore.i32(i32 67, %dx.types.Handle %4, i32 %6, i32 %7, i32 undef, i32 %303, i32 %303, i32 %303, i32 %303, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %304

; <label>:304                                     ; preds = %300, %208
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.groupId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.flattenedThreadIdInGroup.i32(i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.waveGetLaneCount(i32) #0

; Function Attrs: nounwind
declare float @dx.op.waveActiveOp.f32(i32, float, i8, i8) #1

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind
declare i1 @dx.op.waveIsFirstLane(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #3

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #3

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { noduplicate nounwind }
attributes #3 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!14}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 2}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 2}
!4 = !{null, !5, !12, null}
!5 = !{!6, !8, !9, !10}
!6 = !{i32 0, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!7 = !{i32 0, i32 5}
!8 = !{i32 1, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!9 = !{i32 2, %"class.RWTexture2D<unsigned int>"* undef, !"", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!10 = !{i32 3, %"class.RWTexture2D<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 2, i1 false, i1 false, i1 false, !11}
!11 = !{i32 0, i32 9}
!12 = !{!13}
!13 = !{i32 0, %CB0* undef, !"", i32 0, i32 0, i32 1, i32 60, null}
!14 = !{void ()* @main, !"main", null, !4, !15}
!15 = !{i32 0, i64 532480, i32 4, !16}
!16 = !{i32 8, i32 8, i32 1}
!17 = !{!18, !18, i64 0}
!18 = !{!"float", !19, i64 0}
!19 = !{!"omnipotent char", !20, i64 0}
!20 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_pVRSContrastAdaptive8x8_RGB_CS[] = {
  0x44, 0x58, 0x42, 0x43, 0xcf, 0x8a, 0xea, 0xfe, 0x7e, 0xd8, 0xe5, 0x35,
  0x65, 0x71, 0x53, 0x01, 0x1b, 0x20, 0x53, 0x33, 0x01, 0x00, 0x00, 0x00,
  0x24, 0x1f, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x38, 0x01, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x50, 0x0d, 0x00, 0x00,
  0x6c, 0x0d, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0xc0, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x54, 0x53, 0x30, 0x5c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x53, 0x54, 0x41, 0x54, 0xac, 0x0b, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0xeb, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x94, 0x0b, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe4, 0xc1, 0x0c, 0x40, 0x02, 0x01, 0x83,
  0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88, 0x39, 0x02, 0x30, 0x28,
  0x83, 0x61, 0x18, 0x74, 0x14, 0xc1, 0x30, 0x28, 0x99, 0x23, 0x40, 0x4a,
  0x01, 0x18, 0xc0, 0xb2, 0x10, 0x53, 0x86, 0xc1, 0x30, 0xc8, 0x29, 0x03,
  0x60, 0x00, 0x04, 0x15, 0x02, 0x30, 0x00, 0x80, 0xa4, 0x9b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0x05, 0x00, 0x00, 0x80, 0x41, 0xcb, 0x3d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0xa0, 0x2a, 0x0a, 0x65,
  0x58, 0x86, 0x61, 0x18, 0x86, 0x61, 0xd0, 0x55, 0x96, 0xc1, 0xb0, 0x0c,
  0xc3, 0x30, 0x0c, 0xc3, 0x58, 0x28, 0xbb, 0x69, 0xb8, 0xfc, 0x09, 0x7b,
  0x08, 0xc9, 0x5f, 0x09, 0x69, 0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x54, 0x18,
  0x86, 0x61, 0x18, 0x45, 0xd9, 0x0c, 0xcb, 0x30, 0x0c, 0xc3, 0x30, 0x0c,
  0xe2, 0xe6, 0x08, 0x82, 0x22, 0x78, 0x06, 0x7d, 0xa5, 0x00, 0x0c, 0x00,
  0x00, 0x28, 0x2c, 0x03, 0x60, 0x18, 0x34, 0x16, 0x04, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x80, 0xca, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c,
  0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x61, 0x18, 0x86,
  0x51, 0x88, 0xd3, 0xb0, 0x0c, 0x42, 0x8f, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e,
  0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb, 0x46, 0x04,
  0x00, 0x00, 0x40, 0x21, 0x54, 0xc3, 0x32, 0x68, 0x2d, 0x86, 0x65, 0x2c,
  0x86, 0xe1, 0x51, 0x3b, 0x10, 0x30, 0xd3, 0x37, 0x0e, 0xec, 0x10, 0x0e,
  0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f,
  0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x50, 0x0f,
  0xee, 0x30, 0x0f, 0xe9, 0x70, 0x0e, 0xee, 0x50, 0x0e, 0xe4, 0x00, 0x06,
  0xe9, 0xe0, 0x0e, 0xf4, 0xe0, 0x07, 0x28, 0x30, 0x08, 0x1e, 0x46, 0x10,
  0x80, 0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc,
  0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4,
  0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8,
  0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8,
  0x81, 0x0d, 0xc0, 0x40, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x32,
  0xcd, 0xc3, 0x08, 0x82, 0x71, 0x03, 0xb7, 0xd1, 0xc8, 0xa9, 0x0d, 0x00,
  0x00, 0x00, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xb2, 0xe7, 0x08, 0x40,
  0x01, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76, 0x00, 0x30, 0x3b, 0x00,
  0x98, 0x1d, 0x00, 0xcc, 0x0e, 0x00, 0x66, 0x67, 0x0f, 0xc0, 0x43, 0x1e,
  0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x07, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x12, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x1c, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x39, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x03, 0x04, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x08, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x2e,
  0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x64, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0xe1, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0xf3, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x27, 0x0c, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x06, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x29, 0x03, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xa0, 0x01, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xd6,
  0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x6d, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x59, 0x20, 0x00, 0x16, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0xc2,
  0x0b, 0x10, 0x30, 0x88, 0x8c, 0x12, 0x28, 0x82, 0x11, 0x80, 0x62, 0x28,
  0x85, 0x32, 0x28, 0x89, 0xc2, 0x2b, 0x87, 0x82, 0x28, 0x8c, 0x02, 0x29,
  0x94, 0x82, 0x29, 0x9c, 0x02, 0x2a, 0xa4, 0x82, 0x2a, 0xac, 0x02, 0x2b,
  0xb4, 0x82, 0x2b, 0x84, 0x02, 0xa4, 0x28, 0xd8, 0x80, 0xa2, 0x27, 0x20,
  0x6f, 0x04, 0xa0, 0x06, 0x28, 0x9e, 0x01, 0x20, 0x7a, 0x06, 0x80, 0xec,
  0x19, 0x00, 0xba, 0x67, 0x00, 0x28, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x04, 0x43, 0x9b, 0x20, 0x18, 0xdb, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x06, 0xb7, 0x41, 0x30, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x04,
  0xa3, 0xdb, 0x30, 0x20, 0x09, 0x31, 0x41, 0x88, 0x03, 0x3b, 0x20, 0x65,
  0x25, 0x35, 0x35, 0x85, 0x16, 0x46, 0x96, 0xe6, 0x76, 0x26, 0x15, 0x46,
  0x57, 0x26, 0x54, 0x67, 0x66, 0x56, 0x26, 0x37, 0x41, 0xf0, 0xe8, 0x60,
  0x82, 0x60, 0x78, 0x1b, 0x04, 0xc3, 0xd9, 0xb0, 0x18, 0x0b, 0x63, 0x18,
  0x03, 0xd1, 0x34, 0xcd, 0x43, 0x08, 0xea, 0x6d, 0x8e, 0xae, 0xc8, 0xcc,
  0xac, 0x6c, 0x8c, 0x6e, 0x2e, 0xa9, 0x2d, 0xec, 0xac, 0x6c, 0xc3, 0x32,
  0x2c, 0x91, 0x31, 0x0c, 0x44, 0xd3, 0x34, 0x0f, 0x1d, 0xab, 0x32, 0xb6,
  0xb7, 0xb1, 0x34, 0xba, 0x3c, 0xa1, 0x3a, 0x33, 0xb3, 0x32, 0xb9, 0x0d,
  0x0b, 0xb1, 0x4c, 0x06, 0x31, 0x10, 0x4d, 0xd3, 0x3c, 0x13, 0x04, 0xe3,
  0x9b, 0x20, 0xd0, 0xc1, 0x1d, 0xd0, 0xaa, 0x82, 0x9b, 0x1b, 0x0b, 0x63,
  0x2b, 0x23, 0xb3, 0x2a, 0x63, 0x7b, 0x1b, 0x4b, 0xa3, 0xcb, 0x13, 0xaa,
  0x33, 0x33, 0x2b, 0x93, 0x9b, 0x20, 0x18, 0x60, 0xb0, 0x41, 0x30, 0xb0,
  0x0d, 0x4b, 0x65, 0x5d, 0x46, 0x35, 0x10, 0x4d, 0xd3, 0x64, 0x1b, 0x08,
  0x48, 0xa2, 0xb4, 0x09, 0xc2, 0x1d, 0xe4, 0x01, 0x87, 0x21, 0x21, 0x98,
  0x09, 0x82, 0x11, 0x06, 0x1b, 0x10, 0x83, 0xeb, 0x0c, 0x63, 0xf0, 0x80,
  0x0d, 0xc1, 0xb7, 0x81, 0x00, 0x36, 0x30, 0x00, 0x26, 0x08, 0x76, 0x80,
  0x07, 0x5c, 0xa8, 0xca, 0xf0, 0xe8, 0xea, 0xe4, 0xca, 0xa6, 0xd2, 0xf4,
  0xca, 0x26, 0x08, 0x86, 0x18, 0x6c, 0x30, 0x92, 0x31, 0xa8, 0x0c, 0x32,
  0x70, 0x38, 0x4d, 0xa1, 0x85, 0x91, 0xa5, 0xb9, 0x9d, 0x49, 0x85, 0xd1,
  0x95, 0x51, 0xa5, 0xb1, 0x95, 0x4d, 0xa5, 0xe9, 0x95, 0x4d, 0x10, 0x8c,
  0x31, 0xd8, 0x60, 0x24, 0x66, 0x50, 0x9d, 0x01, 0x19, 0x38, 0xa4, 0xa6,
  0xca, 0xdc, 0xe6, 0xd2, 0xe8, 0xd2, 0xec, 0xd2, 0xe8, 0xf2, 0xa8, 0xd0,
  0xe4, 0xca, 0xe6, 0xd0, 0xde, 0xd8, 0xc8, 0x26, 0x08, 0x06, 0x19, 0x4c,
  0x10, 0xbc, 0x3a, 0xd8, 0x80, 0x24, 0x69, 0x50, 0xa9, 0x01, 0x19, 0x60,
  0xd8, 0x1a, 0xf0, 0x28, 0x72, 0xb3, 0x63, 0xaa, 0x6b, 0x0b, 0x9b, 0x20,
  0x18, 0x65, 0xb0, 0x01, 0x49, 0xda, 0xa0, 0x72, 0x03, 0x32, 0xc0, 0xb0,
  0x35, 0x60, 0xb0, 0x34, 0x41, 0x30, 0xcc, 0x60, 0x03, 0x92, 0xc0, 0x41,
  0x15, 0x07, 0x64, 0x80, 0x61, 0x6b, 0x40, 0xea, 0xaa, 0x4c, 0xac, 0x4c,
  0xce, 0xa8, 0x6c, 0x0c, 0xcd, 0xad, 0x4c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e,
  0x2e, 0xcc, 0x8d, 0x6e, 0x82, 0x60, 0x9c, 0xc1, 0x06, 0x24, 0x99, 0x83,
  0x8a, 0x0e, 0xc8, 0x00, 0xc3, 0xd6, 0x80, 0x4f, 0xd5, 0x5c, 0xd9, 0x55,
  0x99, 0x58, 0x99, 0x9c, 0x51, 0xd9, 0x18, 0x9a, 0x5b, 0x99, 0xdc, 0x04,
  0xc1, 0x40, 0x83, 0x0d, 0x48, 0x62, 0x07, 0xd5, 0x1d, 0x90, 0xc1, 0x80,
  0xad, 0x01, 0xa1, 0xaa, 0xb9, 0xb2, 0xa6, 0x37, 0xba, 0xb4, 0x37, 0x37,
  0xab, 0xb2, 0x31, 0xba, 0x37, 0xb9, 0xb9, 0x09, 0x82, 0x91, 0x06, 0x1b,
  0x90, 0x24, 0x0f, 0x2a, 0x3d, 0x20, 0x83, 0x01, 0x5b, 0x03, 0x42, 0x41,
  0x6c, 0x6c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x72, 0x74, 0x65, 0x72, 0x52,
  0x61, 0x74, 0x65, 0x13, 0x04, 0x43, 0x0d, 0x36, 0x20, 0x09, 0x1f, 0x54,
  0x7d, 0x40, 0x06, 0x03, 0xb6, 0x06, 0x5c, 0x9c, 0xc2, 0xe8, 0xd2, 0xec,
  0xca, 0xae, 0xd2, 0xc8, 0xe8, 0xd0, 0x26, 0x08, 0xc6, 0x1a, 0x6c, 0x40,
  0x92, 0x3f, 0xa8, 0x40, 0x81, 0x0c, 0x1c, 0x6c, 0x0d, 0xc8, 0x38, 0x85,
  0xd1, 0xa5, 0xd9, 0x95, 0x21, 0x95, 0xa5, 0x9d, 0xa1, 0xd1, 0x4d, 0x10,
  0x0c, 0x36, 0xd8, 0x80, 0x24, 0xa2, 0x50, 0x8d, 0x02, 0x19, 0x38, 0xd8,
  0x1a, 0xb0, 0xa9, 0x82, 0x9b, 0x1b, 0x0b, 0x63, 0x2b, 0x23, 0xbb, 0x4a,
  0x23, 0xa3, 0x43, 0x9b, 0x20, 0x18, 0x6d, 0xb0, 0x01, 0x49, 0x4a, 0xa1,
  0x32, 0x05, 0x32, 0x70, 0xb0, 0x35, 0xa0, 0x53, 0x05, 0x37, 0x37, 0x16,
  0xc6, 0x56, 0x46, 0x86, 0x54, 0x96, 0x76, 0x86, 0x46, 0x37, 0x41, 0x30,
  0xdc, 0x60, 0x03, 0x92, 0xa0, 0x42, 0x95, 0x0a, 0x64, 0xe0, 0x60, 0x6b,
  0x40, 0xac, 0x6a, 0xae, 0xac, 0x0a, 0x6e, 0x6e, 0x2c, 0x8c, 0xad, 0x8c,
  0xac, 0xe9, 0x8d, 0x2e, 0xed, 0xcd, 0xcd, 0xaa, 0x6c, 0x8c, 0xee, 0x4d,
  0x6e, 0x6e, 0x82, 0x60, 0xbc, 0xc1, 0x06, 0x24, 0x59, 0x85, 0x8a, 0x15,
  0xc8, 0x60, 0xc0, 0xd6, 0x60, 0xc3, 0xe3, 0x95, 0x01, 0x1a, 0xb0, 0xc1,
  0x1b, 0xc8, 0x41, 0x1d, 0xe0, 0xc1, 0x1e, 0xf8, 0x41, 0x28, 0x90, 0xc2,
  0x29, 0xa8, 0x42, 0x2b, 0x6c, 0x18, 0x0c, 0x31, 0x70, 0x85, 0x09, 0x42,
  0x51, 0x6c, 0x00, 0x36, 0x0c, 0x46, 0x2c, 0xc4, 0xc2, 0x86, 0x40, 0x16,
  0x36, 0x0c, 0x03, 0x2c, 0xcc, 0x02, 0x89, 0xb6, 0xb0, 0x34, 0xb7, 0x09,
  0x02, 0x1e, 0x64, 0x13, 0x04, 0x03, 0x0e, 0x36, 0x0c, 0x67, 0x70, 0x06,
  0xc3, 0x06, 0xc2, 0xb0, 0x85, 0x5b, 0xc0, 0x85, 0x0d, 0x05, 0x2c, 0xd4,
  0x02, 0x10, 0x06, 0xb9, 0x40, 0x28, 0x4c, 0x4e, 0x2e, 0x2c, 0xef, 0x8b,
  0xee, 0x6c, 0xae, 0xed, 0x4b, 0x2c, 0x8f, 0xae, 0x6c, 0x6e, 0x82, 0x60,
  0xc4, 0x01, 0x9f, 0x30, 0x39, 0xb9, 0xb0, 0xbc, 0x2f, 0xba, 0xb3, 0xb9,
  0xb6, 0x2f, 0x36, 0xb2, 0x39, 0x3a, 0x1e, 0x62, 0x61, 0x72, 0x72, 0x69,
  0x65, 0x72, 0x44, 0xc4, 0xe4, 0xc2, 0xdc, 0xc6, 0xd0, 0xca, 0xe6, 0x68,
  0x98, 0xb1, 0xbd, 0x85, 0xd1, 0xcd, 0x4d, 0x10, 0x0c, 0x39, 0x60, 0x91,
  0xe6, 0x36, 0x47, 0x37, 0x37, 0x41, 0x30, 0xe6, 0x80, 0x44, 0x9a, 0x1b,
  0xdd, 0x1c, 0x11, 0xba, 0x32, 0xbc, 0x2f, 0xb6, 0xb7, 0x30, 0x32, 0x26,
  0x74, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2c, 0xea, 0xd2,
  0xdc, 0xe8, 0xe6, 0x36, 0x50, 0xbb, 0xc0, 0x0b, 0xbd, 0xe0, 0x06, 0xbe,
  0x50, 0xfd, 0xc2, 0x19, 0x80, 0x43, 0x38, 0x88, 0xc3, 0x38, 0x90, 0x03,
  0x28, 0x94, 0x83, 0x63, 0x0e, 0xc3, 0x39, 0x98, 0x42, 0x15, 0x36, 0x36,
  0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x41, 0x50, 0x85,
  0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40,
  0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12,
  0x18, 0x75, 0xc8, 0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a,
  0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04, 0x49, 0x19, 0x32, 0x3c, 0x17, 0xb9,
  0xb2, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0x01, 0x18, 0x54,
  0x22, 0xc3, 0x73, 0xa1, 0xcb, 0x83, 0x2b, 0x0b, 0x72, 0x73, 0x7b, 0xa3,
  0x0b, 0xa3, 0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x22, 0xb8, 0xc2, 0x2c, 0xd4,
  0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73,
  0xa3, 0x9b, 0x9b, 0x12, 0xe4, 0x42, 0x17, 0x32, 0x3c, 0x97, 0xb1, 0xb7,
  0x3a, 0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0xc1, 0x39, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x73, 0x00, 0x00, 0x00, 0x45, 0x10, 0x06, 0x81, 0x9f, 0xbb, 0x9c, 0x3e,
  0xa3, 0xc5, 0x6f, 0x39, 0xfa, 0xfd, 0x26, 0x03, 0x81, 0x33, 0x68, 0x30,
  0x0b, 0xbb, 0x91, 0x48, 0xc3, 0x60, 0x33, 0xe8, 0x8a, 0x91, 0xd3, 0xed,
  0x0a, 0xa0, 0x02, 0xbf, 0x7b, 0xd8, 0x5e, 0x66, 0xd6, 0xdb, 0xe1, 0x69,
  0xbd, 0x0d, 0x04, 0xce, 0xa0, 0xc1, 0x66, 0xb0, 0x04, 0xaa, 0xc0, 0xef,
  0x1e, 0xb6, 0x97, 0x99, 0xf5, 0x76, 0x78, 0x5a, 0x6f, 0x63, 0x81, 0xc0,
  0x19, 0x34, 0xd8, 0x0c, 0xd6, 0x40, 0x15, 0xf8, 0xdd, 0xc3, 0xf6, 0x32,
  0xb3, 0xde, 0x0e, 0x4f, 0xeb, 0xed, 0x2c, 0x10, 0x38, 0x83, 0x06, 0x9b,
  0xc1, 0x02, 0xc0, 0x02, 0xbf, 0x7b, 0xd8, 0x5e, 0xb6, 0x96, 0xd9, 0xef,
  0x71, 0x9a, 0x9e, 0x6f, 0xa6, 0xdd, 0x40, 0xe0, 0x0c, 0x1a, 0x6c, 0x06,
  0x8d, 0xa1, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x88, 0x22, 0x84, 0x88,
  0xcc, 0x01, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x69, 0x80, 0x08, 0xf3,
  0x8b, 0xdb, 0xb6, 0x8b, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a,
  0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0xbf, 0xb8,
  0x6d, 0xb3, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20,
  0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x91, 0xdb, 0x36,
  0x0c, 0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00, 0x26, 0x22, 0x04,
  0x9a, 0x61, 0x21, 0xac, 0xc2, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0xc1, 0x99,
  0x6e, 0xbf, 0xb8, 0x6d, 0x3b, 0x10, 0x83, 0xe1, 0xf2, 0x9d, 0xc7, 0x2f,
  0x16, 0x60, 0x9a, 0x88, 0x86, 0x18, 0xda, 0x23, 0x22, 0x80, 0x41, 0x1c,
  0xc4, 0x06, 0x8c, 0x1c, 0xea, 0xf1, 0x91, 0xdb, 0x36, 0x83, 0x68, 0xb8,
  0x7c, 0xe7, 0xf1, 0x8d, 0xc8, 0xa1, 0x1e, 0x71, 0xf0, 0x91, 0xdb, 0x36,
  0x0a, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x17, 0xc2, 0x00, 0x04, 0xec, 0xab,
  0xf5, 0xd6, 0xf9, 0x6e, 0xdb, 0x26, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f,
  0x88, 0x68, 0x42, 0x80, 0x08, 0xf3, 0x8b, 0xdb, 0xb6, 0x87, 0x6a, 0xb8,
  0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0,
  0x8b, 0xdb, 0xb6, 0x88, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a,
  0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0, 0x91, 0xdb, 0x36, 0x08, 0x6b, 0xb8,
  0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x60, 0x27, 0x27, 0x22,
  0x7c, 0xe4, 0xb6, 0x2d, 0x41, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0xe9, 0x88,
  0x08, 0x60, 0x10, 0x07, 0x1f, 0xb9, 0x6d, 0x43, 0xc8, 0x86, 0xcb, 0x77,
  0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4, 0x41, 0x6c, 0xc0, 0xc8, 0xa1,
  0x1e, 0x1f, 0xb9, 0x6d, 0x6b, 0x78, 0x86, 0xcb, 0x77, 0x1e, 0x9f, 0x6a,
  0x80, 0x08, 0xf3, 0x8b, 0xdb, 0xb6, 0x05, 0x6b, 0xb8, 0x7c, 0xe7, 0xf1,
  0x2d, 0xa0, 0x22, 0x34, 0x61, 0x42, 0x2a, 0x02, 0x7d, 0xfc, 0xe2, 0xb6,
  0x4d, 0xc1, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x0b, 0xa8, 0x08, 0x90, 0x98,
  0x4a, 0xa0, 0x21, 0x38, 0x87, 0x6a, 0x26, 0x93, 0xa8, 0x86, 0xcb, 0x77,
  0x1e, 0xdf, 0x02, 0x2a, 0x42, 0x94, 0x3e, 0x24, 0x92, 0xa6, 0x12, 0x68,
  0x08, 0x2b, 0x20, 0x18, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa9, 0xe0, 0x6f, 0x79, 0xc4, 0xa4, 0xad, 0xcc, 0xf0, 0xe3, 0x1e, 0x64,
  0x57, 0x9b, 0x00, 0xa1, 0x44, 0x58, 0x49, 0x4c, 0xb0, 0x11, 0x00, 0x00,
  0x62, 0x00, 0x05, 0x00, 0x6c, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x02, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x98, 0x11, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x63, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x06, 0x90, 0x36, 0x18, 0xc4, 0xff, 0xff,
  0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x01, 0x00, 0x89, 0x20, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xec, 0xc1, 0x0c, 0x40, 0x02, 0x01, 0x83,
  0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88, 0x39, 0x02, 0x30, 0x28,
  0x83, 0x61, 0x18, 0x74, 0x14, 0xc1, 0x30, 0x28, 0x99, 0x23, 0x40, 0x4a,
  0x01, 0x18, 0xc0, 0xb2, 0x10, 0x53, 0x86, 0xc1, 0x30, 0xc8, 0x29, 0x03,
  0x60, 0x00, 0x04, 0x15, 0x02, 0x30, 0x00, 0x80, 0xa4, 0x9b, 0x86, 0xcb,
  0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x56, 0x62, 0xf2, 0x8b, 0xdb,
  0x46, 0x05, 0x00, 0x00, 0x80, 0x41, 0xcb, 0x3d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0x7e, 0x08, 0x34, 0xc3, 0x42, 0xa0, 0xa0, 0x2a, 0x0a, 0x65,
  0x58, 0x86, 0x61, 0x18, 0x86, 0x61, 0xd0, 0x55, 0x96, 0xc1, 0xb0, 0x0c,
  0xc3, 0x30, 0x0c, 0xc3, 0x58, 0x28, 0xbb, 0x69, 0xb8, 0xfc, 0x09, 0x7b,
  0x08, 0xc9, 0x5f, 0x09, 0x69, 0x25, 0x26, 0x1f, 0xb9, 0x6d, 0x54, 0x18,
  0x86, 0x61, 0x18, 0x45, 0xd9, 0x0c, 0xcb, 0x30, 0x0c, 0xc3, 0x30, 0x0c,
  0xe2, 0xe6, 0x08, 0x82, 0x22, 0x78, 0x06, 0x7d, 0xa5, 0x00, 0x0c, 0x00,
  0x00, 0x28, 0x2c, 0x03, 0x60, 0x18, 0x34, 0x16, 0x04, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x80, 0xca, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c,
  0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x61, 0x18, 0x86,
  0x51, 0x88, 0xd3, 0xb0, 0x0c, 0x42, 0x8f, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e,
  0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb, 0x46, 0x04,
  0x00, 0x00, 0x40, 0x21, 0x54, 0xc3, 0x32, 0x68, 0x2d, 0x86, 0x65, 0x2c,
  0x86, 0xe1, 0x51, 0x3b, 0x10, 0x30, 0xd3, 0x37, 0x0e, 0xec, 0x10, 0x0e,
  0xf3, 0x30, 0x0f, 0x6e, 0x20, 0x0b, 0xb7, 0x40, 0x0b, 0xe5, 0x80, 0x0f,
  0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x50, 0x0f,
  0xee, 0x30, 0x0f, 0xe9, 0x70, 0x0e, 0xee, 0x50, 0x0e, 0xe4, 0x00, 0x06,
  0xe9, 0xe0, 0x0e, 0xf4, 0xe0, 0x07, 0x28, 0x30, 0x08, 0x1e, 0x46, 0x10,
  0x80, 0x99, 0xc8, 0x60, 0x1c, 0xd8, 0x21, 0x1c, 0xe6, 0x61, 0x1e, 0xdc,
  0x40, 0x16, 0x6e, 0x81, 0x16, 0xca, 0x01, 0x1f, 0xe8, 0xa1, 0x1e, 0xe4,
  0xa1, 0x1c, 0xe4, 0x80, 0x14, 0xf8, 0xc0, 0x1e, 0xca, 0x61, 0x1c, 0xe8,
  0xe1, 0x1d, 0xe4, 0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8,
  0x81, 0x0d, 0xc0, 0x40, 0x0e, 0xfc, 0x00, 0x0c, 0xfc, 0x00, 0x05, 0x32,
  0xcd, 0xc3, 0x08, 0x82, 0x71, 0x03, 0xb7, 0xd1, 0xc8, 0xa9, 0x0d, 0x00,
  0x00, 0x00, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xb2, 0xe7, 0x08, 0x40,
  0x61, 0x0a, 0x60, 0x10, 0x01, 0x18, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x00, 0x30, 0x3b, 0x00, 0x98, 0x1d, 0x00, 0xcc, 0x0e, 0x00, 0x66, 0x47,
  0x0d, 0xc0, 0x43, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x07, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x12, 0x20, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x1c, 0x40, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x39, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x93, 0x00, 0x01,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x01,
  0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f,
  0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x08, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x12, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0x2e, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0x64, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0xe4, 0xe1, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xf3, 0x01, 0x01, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x27, 0x0c, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x06, 0x40,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x29,
  0x03, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0xa0, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0xd6, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x6d, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0xc2, 0x47, 0x00, 0xc8, 0x28, 0x81, 0x22, 0x28, 0x86,
  0x11, 0x80, 0x52, 0x28, 0x83, 0x92, 0x28, 0xbc, 0x42, 0x28, 0x08, 0xf2,
  0x46, 0x00, 0x08, 0x2f, 0x40, 0xc0, 0x20, 0xa2, 0x67, 0x00, 0xe8, 0x9e,
  0x01, 0xa0, 0x78, 0x06, 0x80, 0x82, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x04, 0x43, 0x9b, 0x20, 0x18, 0xdb, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x06, 0xb7, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0x46, 0x37, 0x41, 0x88, 0x03, 0x34, 0x20, 0x30,
  0x41, 0xf0, 0xc8, 0x60, 0x82, 0x60, 0x78, 0x1b, 0x04, 0xc5, 0xd9, 0xb0,
  0x28, 0x0b, 0xa3, 0x28, 0x03, 0xd1, 0x34, 0xcd, 0xb3, 0x61, 0x19, 0x16,
  0x46, 0x19, 0x06, 0xa2, 0x69, 0x9a, 0x67, 0xc3, 0x42, 0x2c, 0x8c, 0x42,
  0x0c, 0x44, 0xd3, 0x34, 0xcf, 0x04, 0xc1, 0xf8, 0x26, 0x08, 0x74, 0x60,
  0x06, 0x13, 0x04, 0x03, 0x0c, 0x36, 0x08, 0x4a, 0xb5, 0x61, 0x99, 0x28,
  0x46, 0x99, 0x06, 0xa2, 0x69, 0x1a, 0x6b, 0x03, 0x01, 0x45, 0xd2, 0x35,
  0x41, 0xb8, 0x83, 0x33, 0x98, 0x20, 0x18, 0x61, 0xb0, 0x01, 0x51, 0x32,
  0x46, 0x51, 0x06, 0x0d, 0xd8, 0x10, 0x6c, 0x1b, 0x08, 0x00, 0xe3, 0x80,
  0x09, 0x42, 0x51, 0x90, 0x68, 0x0b, 0x4b, 0x73, 0x9b, 0x20, 0xe0, 0x41,
  0x19, 0x4c, 0x10, 0x0c, 0x31, 0x98, 0x20, 0x18, 0x63, 0xb0, 0x61, 0x10,
  0x03, 0x31, 0x18, 0x36, 0x10, 0x0a, 0x18, 0x84, 0xc1, 0x18, 0x6c, 0x28,
  0xbc, 0x0f, 0xe8, 0xc8, 0x80, 0x85, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x9f,
  0xb7, 0x36, 0xb7, 0x34, 0xb8, 0x37, 0xba, 0x32, 0x37, 0x3a, 0x90, 0x31,
  0xb4, 0x30, 0x39, 0x46, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x43,
  0x2f, 0x43, 0x2b, 0x2b, 0x20, 0x54, 0x42, 0x41, 0x41, 0x1b, 0x02, 0x34,
  0x98, 0x20, 0xe0, 0x41, 0xb6, 0x61, 0x38, 0x83, 0x34, 0x50, 0x83, 0x0d,
  0x83, 0x19, 0xac, 0x81, 0x1a, 0x6c, 0x18, 0xd8, 0x80, 0x0d, 0xd4, 0xa0,
  0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a, 0x59, 0x99, 0x1b, 0xdd, 0x94,
  0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57, 0x26, 0x37, 0x97, 0xf6, 0xe6,
  0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9, 0xd8, 0x85, 0xb1, 0xd9, 0x95,
  0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78, 0x2e, 0x73, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x02, 0xa4, 0x0c, 0x19,
  0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0xd9, 0xdc, 0x94,
  0x80, 0xab, 0x43, 0x86, 0xe7, 0x52, 0xe6, 0x46, 0x27, 0x97, 0x07, 0xf5,
  0x96, 0xe6, 0x46, 0x37, 0x37, 0x25, 0x20, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x73, 0x00, 0x00, 0x00, 0x45, 0x10, 0x06, 0x81, 0x9f, 0xbb, 0x9c, 0x3e,
  0xa3, 0xc5, 0x6f, 0x39, 0xfa, 0xfd, 0x26, 0x03, 0x81, 0x33, 0x68, 0x30,
  0x0b, 0xbb, 0x91, 0x48, 0xc3, 0x60, 0x33, 0xe8, 0x8a, 0x91, 0xd3, 0xed,
  0x0a, 0xa0, 0x02, 0xbf, 0x7b, 0xd8, 0x5e, 0x66, 0xd6, 0xdb, 0xe1, 0x69,
  0xbd, 0x0d, 0x04, 0xce, 0xa0, 0xc1, 0x66, 0xb0, 0x04, 0xaa, 0xc0, 0xef,
  0x1e, 0xb6, 0x97, 0x99, 0xf5, 0x76, 0x78, 0x5a, 0x6f, 0x63, 0x81, 0xc0,
  0x19, 0x34, 0xd8, 0x0c, 0xd6, 0x40, 0x15, 0xf8, 0xdd, 0xc3, 0xf6, 0x32,
  0xb3, 0xde, 0x0e, 0x4f, 0xeb, 0xed, 0x2c, 0x10, 0x38, 0x83, 0x06, 0x9b,
  0xc1, 0x02, 0xc0, 0x02, 0xbf, 0x7b, 0xd8, 0x5e, 0xb6, 0x96, 0xd9, 0xef,
  0x71, 0x9a, 0x9e, 0x6f, 0xa6, 0xdd, 0x40, 0xe0, 0x0c, 0x1a, 0x6c, 0x06,
  0x8d, 0xa1, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x88, 0x22, 0x84, 0x88,
  0xcc, 0x01, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x00, 0x69, 0x80, 0x08, 0xf3,
  0x8b, 0xdb, 0xb6, 0x8b, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a,
  0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0xbf, 0xb8,
  0x6d, 0xb3, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20,
  0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x91, 0xdb, 0x36,
  0x0c, 0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x88, 0x00, 0x26, 0x22, 0x04,
  0x9a, 0x61, 0x21, 0xac, 0xc2, 0x19, 0x2e, 0xdf, 0x79, 0xfc, 0xc1, 0x99,
  0x6e, 0xbf, 0xb8, 0x6d, 0x3b, 0x10, 0x83, 0xe1, 0xf2, 0x9d, 0xc7, 0x2f,
  0x16, 0x60, 0x9a, 0x88, 0x86, 0x18, 0xda, 0x23, 0x22, 0x80, 0x41, 0x1c,
  0xc4, 0x06, 0x8c, 0x1c, 0xea, 0xf1, 0x91, 0xdb, 0x36, 0x83, 0x68, 0xb8,
  0x7c, 0xe7, 0xf1, 0x8d, 0xc8, 0xa1, 0x1e, 0x71, 0xf0, 0x91, 0xdb, 0x36,
  0x0a, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x17, 0xc2, 0x00, 0x04, 0xec, 0xab,
  0xf5, 0xd6, 0xf9, 0x6e, 0xdb, 0x26, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f,
  0x88, 0x68, 0x42, 0x80, 0x08, 0xf3, 0x8b, 0xdb, 0xb6, 0x87, 0x6a, 0xb8,
  0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0,
  0x8b, 0xdb, 0xb6, 0x88, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a,
  0xa8, 0x88, 0x28, 0x1d, 0x60, 0xf0, 0x91, 0xdb, 0x36, 0x08, 0x6b, 0xb8,
  0x7c, 0xe7, 0xf1, 0x27, 0xe2, 0x9a, 0xa8, 0x88, 0x60, 0x27, 0x27, 0x22,
  0x7c, 0xe4, 0xb6, 0x2d, 0x41, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0xe9, 0x88,
  0x08, 0x60, 0x10, 0x07, 0x1f, 0xb9, 0x6d, 0x43, 0xc8, 0x86, 0xcb, 0x77,
  0x1e, 0x7f, 0x3a, 0x22, 0x02, 0x18, 0xc4, 0x41, 0x6c, 0xc0, 0xc8, 0xa1,
  0x1e, 0x1f, 0xb9, 0x6d, 0x6b, 0x78, 0x86, 0xcb, 0x77, 0x1e, 0x9f, 0x6a,
  0x80, 0x08, 0xf3, 0x8b, 0xdb, 0xb6, 0x05, 0x6b, 0xb8, 0x7c, 0xe7, 0xf1,
  0x2d, 0xa0, 0x22, 0x34, 0x61, 0x42, 0x2a, 0x02, 0x7d, 0xfc, 0xe2, 0xb6,
  0x4d, 0xc1, 0x1a, 0x2e, 0xdf, 0x79, 0x7c, 0x0b, 0xa8, 0x08, 0x90, 0x98,
  0x4a, 0xa0, 0x21, 0x38, 0x87, 0x6a, 0x26, 0x93, 0xa8, 0x86, 0xcb, 0x77,
  0x1e, 0xdf, 0x02, 0x2a, 0x42, 0x94, 0x3e, 0x24, 0x92, 0xa6, 0x12, 0x68,
  0x08, 0x2b, 0x20, 0x18, 0x00, 0x69, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x2a, 0x02, 0x00, 0x00, 0x13, 0x04, 0x52, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0xb4, 0x94, 0x47, 0x11, 0x94, 0xc0, 0x08, 0x00,
  0x19, 0x65, 0x18, 0x50, 0x80, 0x01, 0xc5, 0x1d, 0x50, 0x1e, 0xe5, 0x53,
  0xf8, 0x7f, 0x45, 0x52, 0xe0, 0x01, 0x05, 0x1c, 0x50, 0x80, 0x80, 0x04,
  0x05, 0xfe, 0x37, 0x03, 0x50, 0x86, 0x02, 0x85, 0x54, 0xee, 0x01, 0x65,
  0x57, 0xe0, 0xff, 0x03, 0x25, 0x57, 0x84, 0x01, 0xe5, 0x50, 0x03, 0x05,
  0x53, 0x22, 0x05, 0xfc, 0x3f, 0x50, 0x6e, 0x05, 0x1a, 0x50, 0x5c, 0xc5,
  0x1b, 0x50, 0xbe, 0x01, 0xa5, 0x1b, 0x40, 0xc0, 0x18, 0x01, 0x08, 0x82,
  0x20, 0xee, 0x8d, 0x11, 0x88, 0xfa, 0xdc, 0x8a, 0xdf, 0x18, 0x81, 0x7a,
  0x86, 0xe8, 0xed, 0x0b, 0x63, 0x04, 0x20, 0x08, 0x82, 0x70, 0x18, 0x8c,
  0x11, 0x80, 0x20, 0x08, 0x8a, 0xe0, 0x30, 0x46, 0x00, 0x82, 0x20, 0x4c,
  0x86, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0x3c, 0x06, 0x63, 0x04, 0x20,
  0x08, 0x82, 0xf0, 0x37, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04,
  0x20, 0x08, 0x82, 0xa8, 0x37, 0x46, 0x00, 0x82, 0x30, 0x1e, 0x8e, 0xc1,
  0x18, 0xc1, 0xad, 0xce, 0x67, 0xee, 0x8d, 0x11, 0xe8, 0x65, 0xe9, 0xce,
  0xdf, 0x18, 0x41, 0x3b, 0xc7, 0x73, 0xf9, 0x8d, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xd0, 0x06, 0xa3, 0xc0, 0xbd, 0x01,
  0x1f, 0xf0, 0xc1, 0x1d, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x41, 0x1b,
  0x90, 0x42, 0x07, 0x07, 0xa1, 0x10, 0x0a, 0x78, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x6d, 0x50, 0x0a, 0x5e, 0x1c, 0x8c, 0xc2, 0x28, 0xe4,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0xb4, 0x81, 0x29, 0x7c, 0x72,
  0x10, 0x0a, 0xa1, 0xa0, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xd0,
  0x06, 0xa7, 0x00, 0x06, 0x74, 0x20, 0x0a, 0xa2, 0xb0, 0x07, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0x70, 0xe8, 0xc2, 0x35, 0x0a, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x70, 0xec, 0x02, 0x76, 0x0a, 0x23, 0x06, 0x05, 0x00,
  0x82, 0x60, 0x90, 0xec, 0x02, 0x1b, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0xc1, 0xb1, 0x0b, 0x99, 0x29, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1,
  0xc1, 0x0b, 0x9a, 0x2a, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xc1,
  0x0b, 0x1a, 0x2a, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xd1, 0x0b,
  0x1b, 0x2b, 0x8c, 0x18, 0x14, 0x00, 0x08, 0x82, 0x41, 0xd2, 0x0b, 0x72,
  0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0xdc, 0x2d, 0xa0, 0xc1, 0xf2,
  0x06, 0x83, 0xf0, 0x06, 0x6f, 0xf0, 0x06, 0x6f, 0x30, 0x9a, 0x10, 0x00,
  0x15, 0xa0, 0xc2, 0x55, 0xd0, 0x06, 0x3a, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x63, 0x80, 0x0b, 0x72, 0x10, 0x14, 0xc1, 0x06, 0x58, 0x01, 0x1c,
  0xe8, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x8c, 0xc1, 0x2e, 0xd4, 0x41,
  0x50, 0x07, 0x1b, 0x60, 0x05, 0x6c, 0xa0, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0x30, 0x06, 0xbe, 0x80, 0x07, 0x41, 0x39, 0x71, 0x00, 0x23, 0x06,
  0x0d, 0x00, 0x82, 0x60, 0xc0, 0x8d, 0x03, 0x1d, 0x5c, 0x7b, 0x10, 0x38,
  0x7b, 0xb0, 0x07, 0x7b, 0xb0, 0x07, 0xa3, 0x09, 0x01, 0x50, 0x01, 0x2d,
  0x5c, 0x05, 0x79, 0xa0, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x30, 0x06,
  0xe4, 0xe0, 0x07, 0x41, 0x11, 0x78, 0x80, 0x15, 0xf0, 0x81, 0x8e, 0x18,
  0x18, 0x00, 0x08, 0x82, 0xc1, 0x18, 0x9c, 0x43, 0x28, 0x04, 0x75, 0xe0,
  0x01, 0x56, 0x80, 0x07, 0x3a, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x63,
  0xa0, 0x0e, 0xa4, 0x10, 0x54, 0xd6, 0x07, 0x30, 0x62, 0xd0, 0x00, 0x20,
  0x08, 0x06, 0xdc, 0x3b, 0x80, 0xc2, 0x18, 0x9c, 0xc2, 0x16, 0x9c, 0xc2,
  0x29, 0x9c, 0xc2, 0x29, 0x8c, 0x26, 0x04, 0x40, 0x05, 0xe0, 0x70, 0x15,
  0x94, 0x82, 0x8e, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x18, 0xc0, 0x83,
  0x2a, 0x04, 0x45, 0x90, 0x02, 0x56, 0x80, 0x0a, 0x3a, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0x63, 0x30, 0x0f, 0xad, 0x10, 0xd4, 0x41, 0x0a, 0x58,
  0x01, 0x29, 0xe8, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x8c, 0x81, 0x3d,
  0xc0, 0x42, 0x60, 0xdf, 0x27, 0x1f, 0xeb, 0x3a, 0xf9, 0xd8, 0xb6, 0xc9,
  0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xca, 0x20, 0x1f, 0x50, 0x61,
  0x10, 0x82, 0x3a, 0xb0, 0x83, 0x3b, 0xb0, 0xeb, 0x92, 0x8f, 0x55, 0x95,
  0x7c, 0x6c, 0x9a, 0xe4, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x65,
  0xd0, 0x0f, 0xac, 0x30, 0x08, 0x41, 0x1e, 0xe8, 0xc1, 0x1e, 0xd8, 0xf3,
  0xc8, 0xc7, 0x9a, 0x46, 0x3e, 0xb6, 0x2c, 0xf2, 0x19, 0x31, 0x58, 0x00,
  0x10, 0x04, 0x83, 0x32, 0x08, 0x09, 0x58, 0x18, 0x84, 0xa0, 0x0f, 0xfc,
  0xe0, 0x0f, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0x80, 0x61, 0x89, 0x5d,
  0x48, 0xd4, 0x41, 0x1d, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x00, 0x0d,
  0x44, 0x62, 0x17, 0xf2, 0xc0, 0x1f, 0x46, 0x13, 0x82, 0x61, 0xb8, 0x21,
  0xe8, 0x07, 0x30, 0xb0, 0x26, 0x89, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x40, 0x2f, 0x01, 0x12, 0x81, 0x3d, 0x47, 0x7c, 0x46, 0x0c, 0x0c,
  0x00, 0x04, 0xc1, 0x00, 0x8a, 0x09, 0x91, 0x08, 0x66, 0x19, 0x84, 0xa0,
  0x28, 0x3e, 0xe0, 0x07, 0x29, 0x3e, 0x08, 0x60, 0x05, 0x43, 0x4f, 0x90,
  0x44, 0x30, 0x6c, 0x40, 0x04, 0xd4, 0x00, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x81, 0x63, 0x13, 0xbb, 0x20, 0x12, 0xf6, 0x07, 0x28, 0x01, 0x02,
  0x03, 0x85, 0x70, 0x00, 0x81, 0x81, 0x82, 0x4a, 0x80, 0xc0, 0x42, 0x61,
  0x1c, 0x40, 0x50, 0xa3, 0x30, 0x12, 0x52, 0x42, 0x00, 0x2b, 0x18, 0xc8,
  0x62, 0x25, 0x02, 0x0a, 0x80, 0x51, 0xc8, 0x49, 0x48, 0x19, 0x01, 0xac,
  0x60, 0x40, 0x8b, 0x97, 0x08, 0x28, 0x00, 0x46, 0x31, 0x2b, 0x21, 0xb5,
  0x0a, 0x01, 0xac, 0x60, 0x60, 0x8b, 0x99, 0x08, 0x28, 0x00, 0x46, 0x41,
  0x2f, 0x21, 0xf5, 0x04, 0xb0, 0x82, 0x01, 0x2e, 0x6e, 0x22, 0xa0, 0x00,
  0x18, 0x35, 0x0b, 0x33, 0x21, 0x35, 0x05, 0xb0, 0x82, 0x81, 0x2e, 0x76,
  0x22, 0xa0, 0x00, 0x18, 0x75, 0xdd, 0x84, 0xd4, 0x15, 0xc0, 0x0a, 0x06,
  0xbc, 0xf8, 0x89, 0x80, 0x02, 0x60, 0xd4, 0xb6, 0x13, 0x52, 0x5a, 0x00,
  0x2b, 0x18, 0xf8, 0x62, 0x2c, 0x02, 0x0a, 0x80, 0x31, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x12, 0x5d, 0x9c, 0x04, 0x3b, 0x64, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x20, 0xd5, 0x05, 0x4a, 0x04, 0xd6, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x48, 0x76, 0x91, 0x12, 0xc1, 0x34, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0xd2, 0x5d, 0xa8, 0x44, 0x00, 0x8d, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0x81, 0x84, 0x17, 0x2b, 0x11, 0x34, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x20, 0xe5, 0x05, 0x4b, 0x04, 0xca, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x48, 0x7a, 0xd1, 0x12, 0xc1, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0xd2, 0x5e, 0xb8, 0x44, 0x80, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0xc1, 0x1a, 0xcc, 0x45, 0x4b, 0xac, 0x03, 0x5c, 0x8c, 0x26, 0x04,
  0x82, 0x0d, 0xfb, 0x20, 0x1f, 0x0b, 0xfa, 0x01, 0x3e, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x00, 0x85, 0x46, 0x4b, 0x04, 0xb6, 0x0f, 0x41, 0x7c,
  0x2c, 0x28, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd2, 0x68,
  0xd8, 0xc4, 0x28, 0xfc, 0x81, 0x05, 0x02, 0x7c, 0xec, 0x0e, 0x02, 0xfa,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x93, 0x1a, 0x38, 0x11, 0x9c,
  0xc5, 0x59, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x74, 0x1a, 0x3a,
  0x71, 0x0a, 0x7f, 0x60, 0x81, 0x01, 0x1f, 0xcb, 0x83, 0x80, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0xb4, 0x06, 0x4f, 0x04, 0x6b, 0xb1,
  0x16, 0xb3, 0x04, 0x83, 0xf5, 0x81, 0x49, 0xc8, 0x67, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0x98, 0xd7, 0xf0, 0x89, 0xa0, 0x2d, 0xda, 0xc2, 0xfa,
  0x00, 0x25, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x4c, 0x6c,
  0x80, 0x45, 0xf0, 0x16, 0x6f, 0x31, 0x4b, 0x30, 0x0c, 0x54, 0x00, 0x52,
  0x60, 0x08, 0x03, 0x15, 0x00, 0x13, 0x10, 0xc2, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0xa0, 0x41, 0x6a, 0x88, 0x05, 0x48, 0x90, 0xc6, 0x68, 0x42,
  0x00, 0x0c, 0x37, 0x04, 0xa4, 0x01, 0x06, 0xb3, 0x0c, 0x07, 0x11, 0x8c,
  0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x1a, 0xb0, 0x46, 0x59, 0x8c, 0xc4,
  0x68, 0x8c, 0x26, 0x04, 0xc2, 0x70, 0x43, 0x70, 0x1a, 0x60, 0x30, 0xcb,
  0x60, 0x14, 0xc1, 0x68, 0xc2, 0x00, 0x5c, 0x00, 0xd4, 0x68, 0x02, 0x22,
  0x5c, 0x00, 0x94, 0x0d, 0x01, 0x7d, 0x46, 0x13, 0x90, 0xe0, 0x02, 0xa0,
  0x46, 0x13, 0x9a, 0xe1, 0x02, 0xa0, 0x6c, 0x08, 0xe8, 0x73, 0x2a, 0x01,
  0x94, 0x1d, 0x81, 0x7c, 0x6e, 0x25, 0x80, 0x32, 0x22, 0x90, 0xcf, 0x0d,
  0xc6, 0x9c, 0x60, 0xcc, 0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x5c, 0xe6,
  0x51, 0x17, 0x3a, 0xc1, 0x17, 0x42, 0xc0, 0x17, 0x7c, 0xc1, 0x17, 0x7c,
  0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x60, 0x82, 0x20, 0x1f, 0x13,
  0x04, 0xf9, 0x98, 0x10, 0xc0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x20, 0xf7, 0xc0, 0x8b, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x98,
  0xf8, 0x00, 0x8d, 0x20, 0x36, 0x5e, 0x63, 0x96, 0xe0, 0x18, 0x31, 0x68,
  0x00, 0x10, 0x04, 0x03, 0x8e, 0x3d, 0xfa, 0x22, 0x2c, 0x48, 0x03, 0x27,
  0x6e, 0x82, 0x34, 0x48, 0x83, 0x34, 0x48, 0x63, 0x34, 0x21, 0x00, 0x2a,
  0xe8, 0x8d, 0xab, 0x00, 0x35, 0xb4, 0x86, 0xf2, 0xb8, 0x0a, 0x56, 0x43,
  0x6b, 0x08, 0x76, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xc6, 0x00, 0x3e,
  0x54, 0x23, 0xb0, 0x60, 0x2e, 0xe4, 0x53, 0x88, 0x7a, 0x60, 0x05, 0xaf,
  0xa1, 0xa5, 0x98, 0x07, 0x56, 0x20, 0x1b, 0x5a, 0x43, 0xb0, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0x30, 0x06, 0xf7, 0x11, 0x1b, 0x81, 0x05, 0x7a,
  0x21, 0x9f, 0x7a, 0x72, 0x03, 0x2b, 0xd8, 0x0d, 0xad, 0xa8, 0x37, 0xd0,
  0x82, 0xdf, 0xb8, 0x41, 0x0d, 0xc1, 0x8e, 0x18, 0x18, 0x00, 0x08, 0x82,
  0xc1, 0x18, 0xf8, 0x07, 0x6e, 0x04, 0x16, 0x90, 0x86, 0x7c, 0xec, 0x79,
  0xe4, 0x63, 0x49, 0x22, 0x1f, 0x0b, 0x04, 0xf8, 0x18, 0x41, 0xc8, 0xc7,
  0x84, 0x00, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x00, 0xb1, 0x88,
  0x6d, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0xbc, 0x88, 0x6f,
  0x04, 0xef, 0xd1, 0x1e, 0xb3, 0x04, 0xc7, 0x40, 0x07, 0xe0, 0x07, 0x85,
  0x60, 0x88, 0xcc, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x0e, 0x8c,
  0xd4, 0x06, 0x7f, 0x8c, 0x18, 0x14, 0x00, 0x08, 0x82, 0xc1, 0xa7, 0x22,
  0xec, 0x31, 0xcb, 0x80, 0x24, 0x41, 0xed, 0x85, 0x5d, 0xcc, 0x0a, 0x86,
  0x1e, 0x09, 0x91, 0x60, 0xd8, 0x80, 0x08, 0x50, 0x62, 0x00, 0x56, 0x30,
  0xf4, 0x88, 0x88, 0x08, 0xc3, 0x06, 0x44, 0x30, 0x0a, 0x03, 0xb0, 0x82,
  0xa1, 0x47, 0x46, 0x64, 0x18, 0x36, 0x20, 0x82, 0x51, 0x18, 0x80, 0x15,
  0x0c, 0x61, 0x42, 0x22, 0xc4, 0xb0, 0x01, 0x11, 0x1c, 0x03, 0x30, 0x4b,
  0x90, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x81, 0x63, 0x23, 0xbb, 0x21,
  0x22, 0xc3, 0x0d, 0xa0, 0x51, 0x22, 0x60, 0x30, 0xcb, 0xa0, 0x44, 0x41,
  0xd1, 0x07, 0x5f, 0xd0, 0x70, 0x43, 0x70, 0x22, 0x66, 0x30, 0xcb, 0xb0,
  0x38, 0xc1, 0x2c, 0x01, 0x33, 0x50, 0x01, 0x3c, 0x8c, 0xcd, 0x2c, 0x03,
  0x15, 0xc0, 0xc4, 0xe0, 0xcc, 0x32, 0x50, 0x01, 0x5c, 0x8c, 0xce, 0x2c,
  0x03, 0x15, 0xc0, 0xc6, 0x90, 0xcd, 0x32, 0x50, 0x61, 0x6c, 0x0c, 0x0e,
  0x2d, 0x2b, 0x18, 0xd2, 0xa4, 0x45, 0x02, 0x0a, 0x80, 0x61, 0xc1, 0x01,
  0x9f, 0x15, 0x0c, 0x6b, 0x02, 0x23, 0x04, 0x05, 0xc0, 0xb0, 0x20, 0x81,
  0xcf, 0x0a, 0x86, 0x36, 0x99, 0x91, 0x83, 0x02, 0x60, 0x58, 0xb0, 0xc0,
  0x67, 0x05, 0xc3, 0x9c, 0xd8, 0x88, 0x42, 0x01, 0x30, 0x46, 0x0c, 0x0e,
  0x00, 0x04, 0xc1, 0x40, 0x3a, 0x13, 0xfd, 0x68, 0x02, 0x6b, 0x78, 0x04,
  0x06, 0xc3, 0x0d, 0x01, 0x85, 0x06, 0xb3, 0x0c, 0x4c, 0x13, 0x14, 0x33,
  0x1e, 0x52, 0x0a, 0x79, 0x48, 0x21, 0xe5, 0x21, 0xb3, 0x04, 0xce, 0x40,
  0x05, 0x20, 0x3a, 0x8a, 0xd1, 0x0c, 0x54, 0x00, 0xa4, 0xa3, 0x18, 0xcd,
  0x40, 0x05, 0x60, 0x3a, 0x8a, 0xd1, 0x0c, 0x54, 0x00, 0xb0, 0xa3, 0x48,
  0xcd, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xac, 0x01, 0x9a, 0x88, 0x08,
  0x78, 0x88, 0xc9, 0x68, 0x42, 0x30, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0xc1, 0x1a, 0xa8, 0x09, 0x89, 0x88, 0xc7, 0x99, 0x8c, 0x26, 0x04, 0x80,
  0x05, 0x08, 0x7c, 0x2c, 0x20, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x10, 0x9e, 0x88, 0x48, 0x32, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x50, 0x9e, 0x8c, 0x48, 0x32, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x61,
  0x40, 0x27, 0xff, 0x91, 0x1f, 0xc9, 0x7c, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x01, 0x1a, 0xc8, 0xc9, 0x8a, 0xa4, 0x47, 0x9b, 0x8c, 0x26, 0x04,
  0xc0, 0x70, 0x43, 0xd0, 0x26, 0x61, 0x70, 0x01, 0x50, 0x16, 0x14, 0xf2,
  0x19, 0x6e, 0x20, 0xe0, 0x04, 0x0c, 0x2e, 0x00, 0xca, 0x82, 0x01, 0x3a,
  0xa3, 0x09, 0x4f, 0x60, 0x24, 0x12, 0xc4, 0xc7, 0x02, 0x13, 0x91, 0xcf,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x84, 0x01, 0xa8, 0xac, 0x48, 0x50,
  0x0d, 0x96, 0x04, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x30,
  0x10, 0x95, 0x16, 0x29, 0x8e, 0xc0, 0x8e, 0x48, 0x3e, 0xc3, 0x11, 0xc1,
  0x34, 0x7c, 0x36, 0x4c, 0xf2, 0x19, 0x8e, 0x08, 0x2a, 0xe2, 0xb3, 0x85,
  0x92, 0xcf, 0x70, 0x44, 0x70, 0x0d, 0x9f, 0x1d, 0x96, 0x7c, 0x86, 0x23,
  0x82, 0x8c, 0xf8, 0x46, 0x13, 0xac, 0x60, 0xb8, 0x21, 0x10, 0x95, 0x30,
  0xb8, 0xc0, 0x08, 0x0b, 0x4e, 0xe5, 0x06, 0xc3, 0x0d, 0x44, 0xa9, 0x80,
  0xc1, 0x05, 0x46, 0x54, 0x30, 0xec, 0x74, 0x43, 0x80, 0x2a, 0x4c, 0x3d,
  0xcd, 0x5e, 0x60, 0x44, 0x05, 0xae, 0xc2, 0x46, 0x04, 0x30, 0x98, 0x6e,
  0x30, 0x5a, 0xa5, 0x29, 0xc8, 0xd9, 0x0b, 0x8c, 0xa8, 0x60, 0x56, 0xd8,
  0x88, 0x00, 0x06, 0xc3, 0x0d, 0x81, 0xac, 0x80, 0xc1, 0x70, 0xc3, 0x51,
  0x2b, 0x60, 0x50, 0x42, 0xa0, 0xb3, 0x0c, 0xd0, 0x13, 0x0c, 0x37, 0x10,
  0xb7, 0x02, 0x06, 0xc3, 0x0d, 0x8a, 0xad, 0x80, 0x41, 0x09, 0x81, 0x4e,
  0x37, 0xec, 0xca, 0x11, 0x58, 0xb3, 0x2b, 0x37, 0x98, 0x25, 0x80, 0x06,
  0x2a, 0x0c, 0xb5, 0x72, 0x84, 0x67, 0xa0, 0xc2, 0xb0, 0x2b, 0xc7, 0x78,
  0x2a, 0x10, 0x76, 0xc4, 0xc0, 0x01, 0x40, 0x10, 0x0c, 0x32, 0x75, 0x61,
  0x15, 0x1e, 0xd1, 0x91, 0x1c, 0x09, 0x95, 0x20, 0x08, 0x02, 0x58, 0x99,
  0x25, 0x88, 0x30, 0x20, 0x06, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x5b, 0x06, 0x54, 0x08, 0xd8, 0x60, 0xcb, 0x10, 0x0b, 0x01, 0x1b, 0x6c,
  0x19, 0x6a, 0x21, 0x60, 0x83, 0x2d, 0x43, 0x2e, 0x04, 0x6c, 0xb0, 0x65,
  0xe8, 0x85, 0x80, 0x0d, 0xb6, 0x0c, 0xe1, 0x10, 0xb0, 0xc1, 0x96, 0xa1,
  0x1c, 0x02, 0x36, 0xd8, 0x32, 0xa4, 0x43, 0xc0, 0x06, 0x5b, 0x86, 0xd7,
  0x08, 0xd8, 0x60, 0xcb, 0x10, 0x1b, 0x01, 0x1b, 0x6c, 0x19, 0x66, 0x23,
  0x60, 0x83, 0x2d, 0x43, 0x6d, 0x04, 0x6c, 0xb0, 0x65, 0x20, 0x8f, 0x80,
  0x0d, 0xb6, 0x0c, 0xe7, 0x11, 0xb0, 0xc1, 0x96, 0x41, 0x3d, 0x02, 0x36,
  0xd8, 0x32, 0xb4, 0x47, 0xc0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
